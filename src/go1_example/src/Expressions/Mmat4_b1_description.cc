/*
 * Automatically Generated from Mathematica.
 * Sun 22 Sep 2024 09:05:50 GMT-05:00
 */

#include "math2mat.hpp"
#include "mdefs.hpp"

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t30;
  double t36;
  double t26;
  double t31;
  double t39;
  double t70;
  double t74;
  double t75;
  double t76;
  double t78;
  double t80;
  double t82;
  double t97;
  double t101;
  double t102;
  double t91;
  double t34;
  double t43;
  double t51;
  double t83;
  double t90;
  double t110;
  double t111;
  double t112;
  double t113;
  double t140;
  double t143;
  double t122;
  double t123;
  double t124;
  double t127;
  double t128;
  double t129;
  double t130;
  double t134;
  double t135;
  double t150;
  double t151;
  double t152;
  double t166;
  double t169;
  double t173;
  double t176;
  double t181;
  double t182;
  double t190;
  double t191;
  double t192;
  double t194;
  double t195;
  double t196;
  double t222;
  double t223;
  double t221;
  double t225;
  double t226;
  double t227;
  double t228;
  double t229;
  double t230;
  double t231;
  double t232;
  double t234;
  double t235;
  double t236;
  double t220;
  double t237;
  double t239;
  double t242;
  double t243;
  double t247;
  double t248;
  double t251;
  double t252;
  double t253;
  double t254;
  double t255;
  double t256;
  double t257;
  double t262;
  double t263;
  double t264;
  double t265;
  double t282;
  double t283;
  double t286;
  double t241;
  double t266;
  double t267;
  double t269;
  double t270;
  double t278;
  double t287;
  double t291;
  double t300;
  double t305;
  double t317;
  double t320;
  double t348;
  double t352;
  double t328;
  double t332;
  double t342;
  double t338;
  double t380;
  double t385;
  double t142;
  double t153;
  double t163;
  double t165;
  double t174;
  double t185;
  double t186;
  double t189;
  double t193;
  double t197;
  double t198;
  double t199;
  double t200;
  double t201;
  double t202;
  double t206;
  double t208;
  double t209;
  double t213;
  double t215;
  double t216;
  double t217;
  double t268;
  double t279;
  double t289;
  double t290;
  double t292;
  double t293;
  double t294;
  double t296;
  double t297;
  double t301;
  double t302;
  double t303;
  double t304;
  double t306;
  double t307;
  double t308;
  double t309;
  double t310;
  double t312;
  double t313;
  double t318;
  double t319;
  double t321;
  double t322;
  double t323;
  double t324;
  double t325;
  double t329;
  double t330;
  double t331;
  double t333;
  double t334;
  double t335;
  double t336;
  double t339;
  double t340;
  double t341;
  double t343;
  double t344;
  double t345;
  double t346;
  double t349;
  double t350;
  double t351;
  double t353;
  double t354;
  double t355;
  double t356;
  double t381;
  double t382;
  double t383;
  double t384;
  double t386;
  double t387;
  double t388;
  double t359;
  double t360;
  double t361;
  double t362;
  double t363;
  double t364;
  double t365;
  double t366;
  double t368;
  double t370;
  double t371;
  double t372;
  double t373;
  double t375;
  double t376;
  double t377;
  double t398;
  double t399;
  double t400;
  double t402;
  double t403;
  double t404;
  double t405;
  double t392;
  double t393;
  double t394;
  double t408;
  double t409;
  double t410;
  double t411;
  double t413;
  double t414;
  double t415;
  double t416;
  double t207;
  double t214;
  double t218;
  double t219;
  double t435;
  double t437;
  double t438;
  double t439;
  double t299;
  double t311;
  double t326;
  double t327;
  double t440;
  double t441;
  double t442;
  double t443;
  double t472;
  double t473;
  double t474;
  double t475;
  double t56;
  double t551;
  double t337;
  double t347;
  double t357;
  double t358;
  double t444;
  double t445;
  double t446;
  double t447;
  double t476;
  double t477;
  double t478;
  double t479;
  double t513;
  double t495;
  double t496;
  double t500;
  double t502;
  double t503;
  double t504;
  double t522;
  double t523;
  double t524;
  double t514;
  double t515;
  double t516;
  double t518;
  double t519;
  double t520;
  double t527;
  double t528;
  double t529;
  double t531;
  double t532;
  double t533;
  double t539;
  double t540;
  double t541;
  double t543;
  double t544;
  double t545;
  double t586;
  double t367;
  double t378;
  double t389;
  double t390;
  double t448;
  double t449;
  double t450;
  double t451;
  double t480;
  double t481;
  double t482;
  double t483;
  double t526;
  double t535;
  double t536;
  double t537;
  double t573;
  double t576;
  double t577;
  double t578;
  double t616;
  double t395;
  double t397;
  double t406;
  double t407;
  double t452;
  double t453;
  double t454;
  double t455;
  double t484;
  double t485;
  double t486;
  double t487;
  double t547;
  double t548;
  double t549;
  double t582;
  double t583;
  double t584;
  double t612;
  double t613;
  double t614;
  double t412;
  double t417;
  double t418;
  double t456;
  double t457;
  double t458;
  double t488;
  double t489;
  double t490;
  double t552;
  double t553;
  double t554;
  double t587;
  double t588;
  double t589;
  double t617;
  double t618;
  double t619;
  double t641;
  double t642;
  double t643;
  double t419;
  double t421;
  double t425;
  double t459;
  double t460;
  double t461;
  double t491;
  double t492;
  double t493;
  double t555;
  double t556;
  double t557;
  double t590;
  double t591;
  double t592;
  double t620;
  double t621;
  double t622;
  double t644;
  double t645;
  double t646;
  double t652;
  double t653;
  double t654;
  t30 = Cos(var1[6]);
  t36 = Sin(var1[4]);
  t26 = Cos(var1[4]);
  t31 = Sin(var1[5]);
  t39 = Sin(var1[6]);
  t70 = Cos(var1[8]);
  t74 = Sin(var1[7]);
  t75 = -1.*t70*t74;
  t76 = Cos(var1[7]);
  t78 = Sin(var1[8]);
  t80 = -1.*t76*t78;
  t82 = t75 + t80;
  t97 = t76*t70;
  t101 = -1.*t74*t78;
  t102 = t97 + t101;
  t91 = Cos(var1[5]);
  t34 = -1.*t26*t30*t31;
  t43 = t36*t39;
  t51 = t34 + t43;
  t83 = t30*t36*t82;
  t90 = t31*t39*t82;
  t110 = t91*t102;
  t111 = t90 + t110;
  t112 = t26*t111;
  t113 = t83 + t112;
  t140 = Cos(var1[3]);
  t143 = Sin(var1[3]);
  t122 = t30*t36*t102;
  t123 = t70*t74;
  t124 = t76*t78;
  t127 = t123 + t124;
  t128 = t91*t127;
  t129 = t31*t39*t102;
  t130 = t128 + t129;
  t134 = t26*t130;
  t135 = t122 + t134;
  t150 = t30*t36*t31;
  t151 = t26*t39;
  t152 = t150 + t151;
  t166 = -1.*t91*t39*t82;
  t169 = t31*t102;
  t173 = t166 + t169;
  t176 = t26*t30*t82;
  t181 = -1.*t36*t111;
  t182 = t176 + t181;
  t190 = t31*t127;
  t191 = -1.*t91*t39*t102;
  t192 = t190 + t191;
  t194 = t26*t30*t102;
  t195 = -1.*t36*t130;
  t196 = t194 + t195;
  t222 = -1.*t70;
  t223 = 1. + t222;
  t221 = 0.3455*t74;
  t225 = 0.3455*t223;
  t226 = 0.350499*t70;
  t227 = -0.20949600000000002*t78;
  t228 = t225 + t226 + t227;
  t229 = -1.*t74*t228;
  t230 = -0.35*t223;
  t231 = -0.559496*t70;
  t232 = -0.004999000000000031*t78;
  t234 = t230 + t231 + t232;
  t235 = t76*t234;
  t236 = t221 + t229 + t235;
  t220 = -0.12675000000000003*t39;
  t237 = t30*t236;
  t239 = t220 + t237;
  t242 = -1.*t30;
  t243 = 1. + t242;
  t247 = -0.072*t243;
  t248 = -0.19875*t30;
  t251 = -1.*t39*t236;
  t252 = t247 + t248 + t251;
  t253 = -1.*t31*t252;
  t254 = -1.*t76;
  t255 = 1. + t254;
  t256 = 0.3455*t255;
  t257 = t76*t228;
  t262 = t74*t234;
  t263 = t256 + t257 + t262;
  t264 = t91*t263;
  t265 = t253 + t264;
  t282 = t91*t252;
  t283 = t31*t263;
  t286 = t282 + t283;
  t241 = t36*t239;
  t266 = t26*t265;
  t267 = t241 + t266;
  t269 = t26*t239;
  t270 = -1.*t36*t265;
  t278 = t269 + t270;
  t287 = t91*t30*t286;
  t291 = -1.*t286*t173;
  t300 = t286*t173;
  t305 = -1.*t286*t192;
  t317 = -1.*t91*t30*t286;
  t320 = t286*t192;
  t348 = -1.*t39*t239;
  t352 = t30*t239*t102;
  t328 = t39*t239;
  t332 = -1.*t30*t239*t82;
  t342 = -1.*t30*t239*t102;
  t338 = t30*t239*t82;
  t380 = -1.*t263*t127;
  t385 = t263*t102;
  t142 = t140*t91*t30;
  t153 = -1.*t143*t152;
  t163 = t142 + t153;
  t165 = 1.1*t51*t163;
  t174 = t140*t173;
  t185 = -1.*t143*t182;
  t186 = t174 + t185;
  t189 = 1.1*t113*t186;
  t193 = t140*t192;
  t197 = -1.*t143*t196;
  t198 = t193 + t197;
  t199 = 1.1*t135*t198;
  t200 = t165 + t189 + t199;
  t201 = t91*t30*t143;
  t202 = t140*t152;
  t206 = t201 + t202;
  t208 = t143*t173;
  t209 = t140*t182;
  t213 = t208 + t209;
  t215 = t143*t192;
  t216 = t140*t196;
  t217 = t215 + t216;
  t268 = t51*t267;
  t279 = t152*t278;
  t289 = t268 + t279 + t287;
  t290 = t289*t113;
  t292 = -1.*t267*t113;
  t293 = -1.*t278*t182;
  t294 = t291 + t292 + t293;
  t296 = t51*t294;
  t297 = t290 + t296;
  t301 = t267*t113;
  t302 = t278*t182;
  t303 = t300 + t301 + t302;
  t304 = t135*t303;
  t306 = -1.*t267*t135;
  t307 = -1.*t278*t196;
  t308 = t305 + t306 + t307;
  t309 = t113*t308;
  t310 = t304 + t309;
  t312 = -1.*t51*t267;
  t313 = -1.*t152*t278;
  t318 = t312 + t313 + t317;
  t319 = t318*t135;
  t321 = t267*t135;
  t322 = t278*t196;
  t323 = t320 + t321 + t322;
  t324 = t51*t323;
  t325 = t319 + t324;
  t329 = -1.*t30*t31*t265;
  t330 = t328 + t329 + t287;
  t331 = t330*t173;
  t333 = -1.*t265*t111;
  t334 = t332 + t333 + t291;
  t335 = t91*t30*t334;
  t336 = t331 + t335;
  t339 = t265*t111;
  t340 = t338 + t339 + t300;
  t341 = t192*t340;
  t343 = -1.*t265*t130;
  t344 = t342 + t305 + t343;
  t345 = t173*t344;
  t346 = t341 + t345;
  t349 = t30*t31*t265;
  t350 = t348 + t349 + t317;
  t351 = t350*t192;
  t353 = t265*t130;
  t354 = t352 + t320 + t353;
  t355 = t91*t30*t354;
  t356 = t351 + t355;
  t381 = t39*t252*t102;
  t382 = t380 + t342 + t381;
  t383 = t30*t82*t382;
  t384 = -1.*t39*t252*t82;
  t386 = t338 + t384 + t385;
  t387 = t30*t102*t386;
  t388 = t383 + t387;
  t359 = -1.*t30*t252;
  t360 = t348 + t359;
  t361 = t30*t360*t102;
  t362 = t263*t127;
  t363 = -1.*t39*t252*t102;
  t364 = t362 + t352 + t363;
  t365 = t39*t364;
  t366 = t361 + t365;
  t368 = t30*t252;
  t370 = t328 + t368;
  t371 = t30*t370*t82;
  t372 = t39*t252*t82;
  t373 = -1.*t263*t102;
  t375 = t332 + t372 + t373;
  t376 = t39*t375;
  t377 = t371 + t376;
  t398 = -1.*t236*t102;
  t399 = t380 + t398;
  t400 = t102*t399;
  t402 = t236*t82;
  t403 = t402 + t385;
  t404 = t127*t403;
  t405 = t400 + t404;
  t392 = 0.072*t82;
  t393 = 0.19875*t127;
  t394 = t392 + t393;
  t408 = t70*t234;
  t409 = -0.3455*t78;
  t410 = t228*t78;
  t411 = t408 + t409 + t410;
  t413 = 0.3455*t70;
  t414 = -1.*t70*t228;
  t415 = t234*t78;
  t416 = t413 + t414 + t415;
  t207 = 1.1*t51*t206;
  t214 = 1.1*t113*t213;
  t218 = 1.1*t135*t217;
  t219 = t207 + t214 + t218;
  t435 = 1.1*t206*t163;
  t437 = 1.1*t213*t186;
  t438 = 1.1*t217*t198;
  t439 = t435 + t437 + t438;
  t299 = 1.1*t135*t297;
  t311 = 1.1*t51*t310;
  t326 = 1.1*t113*t325;
  t327 = t299 + t311 + t326;
  t440 = 1.1*t198*t297;
  t441 = 1.1*t163*t310;
  t442 = 1.1*t186*t325;
  t443 = t440 + t441 + t442;
  t472 = 1.1*t217*t297;
  t473 = 1.1*t206*t310;
  t474 = 1.1*t213*t325;
  t475 = t472 + t473 + t474;
  t56 = Power(t51,2);
  t551 = 0.016226*t51;
  t337 = 1.1*t135*t336;
  t347 = 1.1*t51*t346;
  t357 = 1.1*t113*t356;
  t358 = t337 + t347 + t357;
  t444 = 1.1*t336*t198;
  t445 = 1.1*t163*t346;
  t446 = 1.1*t186*t356;
  t447 = t444 + t445 + t446;
  t476 = 1.1*t336*t217;
  t477 = 1.1*t206*t346;
  t478 = 1.1*t213*t356;
  t479 = t476 + t477 + t478;
  t513 = 0.016226*t91*t30*t51;
  t495 = 0.016077*t113;
  t496 = 0.000213*t135;
  t500 = t495 + t496;
  t502 = 0.000213*t113;
  t503 = 0.000409*t135;
  t504 = t502 + t503;
  t522 = 1.1*t336*t297;
  t523 = 1.1*t346*t310;
  t524 = 1.1*t356*t325;
  t514 = 0.016077*t173;
  t515 = 0.000213*t192;
  t516 = t514 + t515;
  t518 = 0.000213*t173;
  t519 = 0.000409*t192;
  t520 = t518 + t519;
  t527 = 0.016077*t30*t82;
  t528 = 0.000213*t30*t102;
  t529 = t527 + t528;
  t531 = 0.000213*t30*t82;
  t532 = 0.000409*t30*t102;
  t533 = t531 + t532;
  t539 = 0.000213*t127;
  t540 = 0.016077*t102;
  t541 = t539 + t540;
  t543 = 0.000409*t127;
  t544 = 0.000213*t102;
  t545 = t543 + t544;
  t586 = 0.016226*t91*t30;
  t367 = 1.1*t113*t366;
  t378 = 1.1*t135*t377;
  t389 = 1.1*t51*t388;
  t390 = t367 + t378 + t389;
  t448 = 1.1*t163*t388;
  t449 = 1.1*t366*t186;
  t450 = 1.1*t377*t198;
  t451 = t448 + t449 + t450;
  t480 = 1.1*t206*t388;
  t481 = 1.1*t366*t213;
  t482 = 1.1*t377*t217;
  t483 = t480 + t481 + t482;
  t526 = 0.016226*t39*t51;
  t535 = 1.1*t377*t297;
  t536 = 1.1*t388*t310;
  t537 = 1.1*t366*t325;
  t573 = 0.016226*t91*t30*t39;
  t576 = 1.1*t377*t336;
  t577 = 1.1*t388*t346;
  t578 = 1.1*t366*t356;
  t616 = 0.016226*t39;
  t395 = 1.1*t394*t113;
  t397 = -0.13942500000000005*t102*t135;
  t406 = 1.1*t51*t405;
  t407 = t395 + t397 + t406;
  t452 = 1.1*t163*t405;
  t453 = 1.1*t394*t186;
  t454 = -0.13942500000000005*t102*t198;
  t455 = t452 + t453 + t454;
  t484 = 1.1*t206*t405;
  t485 = 1.1*t394*t213;
  t486 = -0.13942500000000005*t102*t217;
  t487 = t484 + t485 + t486;
  t547 = -0.13942500000000005*t102*t297;
  t548 = 1.1*t405*t310;
  t549 = 1.1*t394*t325;
  t582 = -0.13942500000000005*t102*t336;
  t583 = 1.1*t405*t346;
  t584 = 1.1*t394*t356;
  t612 = 1.1*t394*t366;
  t613 = -0.13942500000000005*t102*t377;
  t614 = 1.1*t388*t405;
  t412 = 1.1*t411*t113;
  t417 = 1.1*t416*t135;
  t418 = t412 + t417;
  t456 = 1.1*t411*t186;
  t457 = 1.1*t416*t198;
  t458 = t456 + t457;
  t488 = 1.1*t411*t213;
  t489 = 1.1*t416*t217;
  t490 = t488 + t489;
  t552 = 1.1*t416*t297;
  t553 = 1.1*t411*t325;
  t554 = t551 + t552 + t553;
  t587 = 1.1*t416*t336;
  t588 = 1.1*t411*t356;
  t589 = t586 + t587 + t588;
  t617 = 1.1*t411*t366;
  t618 = 1.1*t416*t377;
  t619 = t616 + t617 + t618;
  t641 = -0.13942500000000005*t102*t416;
  t642 = 1.1*t411*t394;
  t643 = t641 + t642;
  t419 = -0.23044560000000003*t113;
  t421 = -0.005498900000000035*t135;
  t425 = t419 + t421;
  t459 = -0.23044560000000003*t186;
  t460 = -0.005498900000000035*t198;
  t461 = t459 + t460;
  t491 = -0.23044560000000003*t213;
  t492 = -0.005498900000000035*t217;
  t493 = t491 + t492;
  t555 = -0.005498900000000035*t297;
  t556 = -0.23044560000000003*t325;
  t557 = t551 + t555 + t556;
  t590 = -0.005498900000000035*t336;
  t591 = -0.23044560000000003*t356;
  t592 = t586 + t590 + t591;
  t620 = -0.23044560000000003*t366;
  t621 = -0.005498900000000035*t377;
  t622 = t616 + t620 + t621;
  t644 = 0.0006969855750000045*t102;
  t645 = -0.23044560000000003*t394;
  t646 = t644 + t645;
  t652 = -0.23044560000000003*t411;
  t653 = -0.005498900000000035*t416;
  t654 = 0.016226 + t652 + t653;
  p_output1[0]=1.1*Power(t113,2) + 1.1*Power(t135,2) + 1.1*t56;
  p_output1[1]=t200;
  p_output1[2]=t219;
  p_output1[3]=t327;
  p_output1[4]=t358;
  p_output1[5]=t390;
  p_output1[6]=t407;
  p_output1[7]=t418;
  p_output1[8]=t425;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=t200;
  p_output1[19]=1.1*Power(t163,2) + 1.1*Power(t186,2) + 1.1*Power(t198,2);
  p_output1[20]=t439;
  p_output1[21]=t443;
  p_output1[22]=t447;
  p_output1[23]=t451;
  p_output1[24]=t455;
  p_output1[25]=t458;
  p_output1[26]=t461;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=t219;
  p_output1[37]=t439;
  p_output1[38]=1.1*Power(t206,2) + 1.1*Power(t213,2) + 1.1*Power(t217,2);
  p_output1[39]=t475;
  p_output1[40]=t479;
  p_output1[41]=t483;
  p_output1[42]=t487;
  p_output1[43]=t490;
  p_output1[44]=t493;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=t327;
  p_output1[55]=t443;
  p_output1[56]=t475;
  p_output1[57]=1.1*Power(t297,2) + 1.1*Power(t310,2) + 1.1*Power(t325,2) + t113*t500 + t135*t504 + 0.016226*t56;
  p_output1[58]=t513 + t113*t516 + t135*t520 + t522 + t523 + t524;
  p_output1[59]=t526 + t113*t529 + t135*t533 + t535 + t536 + t537;
  p_output1[60]=t113*t541 + t135*t545 + t547 + t548 + t549;
  p_output1[61]=t554;
  p_output1[62]=t557;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=t358;
  p_output1[73]=t447;
  p_output1[74]=t479;
  p_output1[75]=t173*t500 + t192*t504 + t513 + t522 + t523 + t524;
  p_output1[76]=1.1*Power(t336,2) + 1.1*Power(t346,2) + 1.1*Power(t356,2) + t173*t516 + t192*t520 + 0.016226*Power(t30,2)*Power(t91,2);
  p_output1[77]=t173*t529 + t192*t533 + t573 + t576 + t577 + t578;
  p_output1[78]=t173*t541 + t192*t545 + t582 + t583 + t584;
  p_output1[79]=t589;
  p_output1[80]=t592;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=t390;
  p_output1[91]=t451;
  p_output1[92]=t483;
  p_output1[93]=t102*t30*t504 + t526 + t535 + t536 + t537 + t30*t500*t82;
  p_output1[94]=t102*t30*t520 + t573 + t576 + t577 + t578 + t30*t516*t82;
  p_output1[95]=1.1*Power(t366,2) + 1.1*Power(t377,2) + 1.1*Power(t388,2) + 0.016226*Power(t39,2) + t102*t30*t533 + t30*t529*t82;
  p_output1[96]=t102*t30*t545 + t612 + t613 + t614 + t30*t541*t82;
  p_output1[97]=t619;
  p_output1[98]=t622;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=t407;
  p_output1[109]=t455;
  p_output1[110]=t487;
  p_output1[111]=t102*t500 + t127*t504 + t547 + t548 + t549;
  p_output1[112]=t102*t516 + t127*t520 + t582 + t583 + t584;
  p_output1[113]=t102*t529 + t127*t533 + t612 + t613 + t614;
  p_output1[114]=0.01767211875000001*Power(t102,2) + 1.1*Power(t394,2) + 1.1*Power(t405,2) + t102*t541 + t127*t545;
  p_output1[115]=t643;
  p_output1[116]=t646;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=t418;
  p_output1[127]=t458;
  p_output1[128]=t490;
  p_output1[129]=t554;
  p_output1[130]=t589;
  p_output1[131]=t619;
  p_output1[132]=t643;
  p_output1[133]=0.016226 + 1.1*Power(t411,2) + 1.1*Power(t416,2);
  p_output1[134]=t654;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=t425;
  p_output1[145]=t461;
  p_output1[146]=t493;
  p_output1[147]=t557;
  p_output1[148]=t592;
  p_output1[149]=t622;
  p_output1[150]=t646;
  p_output1[151]=t654;
  p_output1[152]=0.06453092041870001;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0;
  p_output1[172]=0;
  p_output1[173]=0;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=0;
  p_output1[181]=0;
  p_output1[182]=0;
  p_output1[183]=0;
  p_output1[184]=0;
  p_output1[185]=0;
  p_output1[186]=0;
  p_output1[187]=0;
  p_output1[188]=0;
  p_output1[189]=0;
  p_output1[190]=0;
  p_output1[191]=0;
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=0;
  p_output1[208]=0;
  p_output1[209]=0;
  p_output1[210]=0;
  p_output1[211]=0;
  p_output1[212]=0;
  p_output1[213]=0;
  p_output1[214]=0;
  p_output1[215]=0;
  p_output1[216]=0;
  p_output1[217]=0;
  p_output1[218]=0;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=0;
  p_output1[222]=0;
  p_output1[223]=0;
  p_output1[224]=0;
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=0;
  p_output1[229]=0;
  p_output1[230]=0;
  p_output1[231]=0;
  p_output1[232]=0;
  p_output1[233]=0;
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=0;
  p_output1[241]=0;
  p_output1[242]=0;
  p_output1[243]=0;
  p_output1[244]=0;
  p_output1[245]=0;
  p_output1[246]=0;
  p_output1[247]=0;
  p_output1[248]=0;
  p_output1[249]=0;
  p_output1[250]=0;
  p_output1[251]=0;
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=0;
  p_output1[259]=0;
  p_output1[260]=0;
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=0;
  p_output1[265]=0;
  p_output1[266]=0;
  p_output1[267]=0;
  p_output1[268]=0;
  p_output1[269]=0;
  p_output1[270]=0;
  p_output1[271]=0;
  p_output1[272]=0;
  p_output1[273]=0;
  p_output1[274]=0;
  p_output1[275]=0;
  p_output1[276]=0;
  p_output1[277]=0;
  p_output1[278]=0;
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0;
  p_output1[283]=0;
  p_output1[284]=0;
  p_output1[285]=0;
  p_output1[286]=0;
  p_output1[287]=0;
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=0;
  p_output1[294]=0;
  p_output1[295]=0;
  p_output1[296]=0;
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=0;
  p_output1[301]=0;
  p_output1[302]=0;
  p_output1[303]=0;
  p_output1[304]=0;
  p_output1[305]=0;
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=0;
  p_output1[313]=0;
  p_output1[314]=0;
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=0;
  p_output1[318]=0;
  p_output1[319]=0;
  p_output1[320]=0;
  p_output1[321]=0;
  p_output1[322]=0;
  p_output1[323]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Mmat4_b1_description.hh"

namespace SymFunction
{

void Mmat4_b1_description_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
