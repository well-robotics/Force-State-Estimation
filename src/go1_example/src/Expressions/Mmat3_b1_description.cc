/*
 * Automatically Generated from Mathematica.
 * Sun 22 Sep 2024 09:05:50 GMT-05:00
 */

#include "math2mat.hpp"
#include "mdefs.hpp"

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t10;
  double t24;
  double t7;
  double t32;
  double t13;
  double t25;
  double t38;
  double t37;
  double t21;
  double t26;
  double t27;
  double t34;
  double t36;
  double t39;
  double t41;
  double t43;
  double t50;
  double t78;
  double t81;
  double t60;
  double t62;
  double t63;
  double t66;
  double t70;
  double t71;
  double t82;
  double t83;
  double t84;
  double t96;
  double t97;
  double t99;
  double t102;
  double t103;
  double t106;
  double t112;
  double t113;
  double t114;
  double t116;
  double t117;
  double t118;
  double t152;
  double t153;
  double t154;
  double t144;
  double t145;
  double t150;
  double t151;
  double t155;
  double t156;
  double t157;
  double t158;
  double t162;
  double t163;
  double t165;
  double t166;
  double t168;
  double t169;
  double t171;
  double t173;
  double t174;
  double t175;
  double t185;
  double t186;
  double t187;
  double t181;
  double t182;
  double t183;
  double t172;
  double t176;
  double t178;
  double t188;
  double t191;
  double t200;
  double t203;
  double t210;
  double t215;
  double t234;
  double t237;
  double t249;
  double t244;
  double t224;
  double t227;
  double t271;
  double t266;
  double t80;
  double t88;
  double t90;
  double t91;
  double t101;
  double t107;
  double t110;
  double t111;
  double t115;
  double t120;
  double t121;
  double t122;
  double t123;
  double t124;
  double t127;
  double t128;
  double t130;
  double t134;
  double t135;
  double t138;
  double t139;
  double t140;
  double t179;
  double t184;
  double t189;
  double t190;
  double t192;
  double t193;
  double t194;
  double t195;
  double t196;
  double t198;
  double t199;
  double t201;
  double t202;
  double t204;
  double t205;
  double t206;
  double t207;
  double t208;
  double t211;
  double t212;
  double t213;
  double t214;
  double t216;
  double t217;
  double t218;
  double t219;
  double t220;
  double t223;
  double t225;
  double t226;
  double t228;
  double t229;
  double t230;
  double t231;
  double t233;
  double t235;
  double t236;
  double t238;
  double t239;
  double t241;
  double t242;
  double t246;
  double t247;
  double t248;
  double t251;
  double t252;
  double t253;
  double t254;
  double t267;
  double t268;
  double t269;
  double t270;
  double t273;
  double t277;
  double t278;
  double t257;
  double t258;
  double t259;
  double t260;
  double t261;
  double t262;
  double t263;
  double t264;
  double t281;
  double t282;
  double t283;
  double t285;
  double t286;
  double t287;
  double t289;
  double t290;
  double t295;
  double t296;
  double t297;
  double t298;
  double t299;
  double t300;
  double t301;
  double t129;
  double t137;
  double t142;
  double t143;
  double t317;
  double t318;
  double t319;
  double t320;
  double t197;
  double t209;
  double t221;
  double t222;
  double t321;
  double t322;
  double t323;
  double t324;
  double t347;
  double t348;
  double t349;
  double t350;
  double t371;
  double t372;
  double t373;
  double t232;
  double t243;
  double t255;
  double t256;
  double t325;
  double t326;
  double t327;
  double t328;
  double t351;
  double t352;
  double t353;
  double t354;
  double t366;
  double t367;
  double t368;
  double t369;
  double t374;
  double t376;
  double t377;
  double t378;
  double t379;
  double t403;
  double t404;
  double t405;
  double t388;
  double t389;
  double t390;
  double t391;
  double t393;
  double t394;
  double t395;
  double t396;
  double t398;
  double t399;
  double t400;
  double t401;
  double t407;
  double t408;
  double t409;
  double t410;
  double t412;
  double t413;
  double t414;
  double t415;
  double t417;
  double t418;
  double t419;
  double t420;
  double t426;
  double t427;
  double t428;
  double t430;
  double t431;
  double t432;
  double t434;
  double t435;
  double t436;
  double t265;
  double t279;
  double t291;
  double t292;
  double t329;
  double t330;
  double t331;
  double t332;
  double t355;
  double t356;
  double t357;
  double t358;
  double t422;
  double t423;
  double t424;
  double t462;
  double t463;
  double t464;
  double t293;
  double t294;
  double t302;
  double t303;
  double t333;
  double t334;
  double t335;
  double t336;
  double t359;
  double t360;
  double t361;
  double t362;
  double t438;
  double t439;
  double t440;
  double t469;
  double t470;
  double t471;
  double t497;
  double t498;
  double t499;
  double t304;
  double t305;
  double t306;
  double t337;
  double t338;
  double t339;
  double t363;
  double t364;
  double t365;
  double t442;
  double t443;
  double t444;
  double t473;
  double t474;
  double t475;
  double t501;
  double t502;
  double t503;
  double t522;
  double t523;
  double t524;
  t10 = Cos(var1[6]);
  t24 = Sin(var1[4]);
  t7 = Cos(var1[4]);
  t32 = Cos(var1[7]);
  t13 = Sin(var1[5]);
  t25 = Sin(var1[6]);
  t38 = Sin(var1[7]);
  t37 = Cos(var1[5]);
  t21 = -1.*t7*t10*t13;
  t26 = t24*t25;
  t27 = t21 + t26;
  t34 = t10*t32*t24;
  t36 = t32*t13*t25;
  t39 = t37*t38;
  t41 = t36 + t39;
  t43 = t7*t41;
  t50 = t34 + t43;
  t78 = Cos(var1[3]);
  t81 = Sin(var1[3]);
  t60 = -1.*t10*t24*t38;
  t62 = t37*t32;
  t63 = -1.*t13*t25*t38;
  t66 = t62 + t63;
  t70 = t7*t66;
  t71 = t60 + t70;
  t82 = t10*t24*t13;
  t83 = t7*t25;
  t84 = t82 + t83;
  t96 = -1.*t37*t32*t25;
  t97 = t13*t38;
  t99 = t96 + t97;
  t102 = t7*t10*t32;
  t103 = -1.*t24*t41;
  t106 = t102 + t103;
  t112 = t32*t13;
  t113 = t37*t25*t38;
  t114 = t112 + t113;
  t116 = -1.*t7*t10*t38;
  t117 = -1.*t24*t66;
  t118 = t116 + t117;
  t152 = -0.051013*t32;
  t153 = 0.00022099999999997122*t38;
  t154 = t152 + t153;
  t144 = -1.*t10;
  t145 = 1. + t144;
  t150 = -0.072*t145;
  t151 = -0.168695*t10;
  t155 = -1.*t25*t154;
  t156 = t150 + t151 + t155;
  t157 = -1.*t13*t156;
  t158 = -1.*t32;
  t162 = 1. + t158;
  t163 = 0.3455*t162;
  t165 = 0.345279*t32;
  t166 = -0.051013*t38;
  t168 = t163 + t165 + t166;
  t169 = t37*t168;
  t171 = t157 + t169;
  t173 = -0.09669500000000002*t25;
  t174 = t10*t154;
  t175 = t173 + t174;
  t185 = t37*t156;
  t186 = t13*t168;
  t187 = t185 + t186;
  t181 = t7*t171;
  t182 = t24*t175;
  t183 = t181 + t182;
  t172 = -1.*t24*t171;
  t176 = t7*t175;
  t178 = t172 + t176;
  t188 = -1.*t37*t10*t187;
  t191 = t187*t99;
  t200 = t37*t10*t187;
  t203 = -1.*t187*t114;
  t210 = -1.*t187*t99;
  t215 = t187*t114;
  t234 = t25*t175;
  t237 = t10*t175*t38;
  t249 = -1.*t10*t175*t38;
  t244 = -1.*t10*t32*t175;
  t224 = -1.*t25*t175;
  t227 = t10*t32*t175;
  t271 = -1.*t168*t38;
  t266 = t32*t168;
  t80 = t78*t37*t10;
  t88 = -1.*t81*t84;
  t90 = t80 + t88;
  t91 = 4.566*t27*t90;
  t101 = t78*t99;
  t107 = -1.*t81*t106;
  t110 = t101 + t107;
  t111 = 4.566*t50*t110;
  t115 = t78*t114;
  t120 = -1.*t81*t118;
  t121 = t115 + t120;
  t122 = 4.566*t71*t121;
  t123 = t91 + t111 + t122;
  t124 = t37*t10*t81;
  t127 = t78*t84;
  t128 = t124 + t127;
  t130 = t81*t99;
  t134 = t78*t106;
  t135 = t130 + t134;
  t138 = t81*t114;
  t139 = t78*t118;
  t140 = t138 + t139;
  t179 = -1.*t84*t178;
  t184 = -1.*t27*t183;
  t189 = t179 + t184 + t188;
  t190 = t189*t50;
  t192 = t183*t50;
  t193 = t178*t106;
  t194 = t191 + t192 + t193;
  t195 = t27*t194;
  t196 = t190 + t195;
  t198 = t84*t178;
  t199 = t27*t183;
  t201 = t198 + t199 + t200;
  t202 = t201*t71;
  t204 = -1.*t183*t71;
  t205 = -1.*t178*t118;
  t206 = t203 + t204 + t205;
  t207 = t27*t206;
  t208 = t202 + t207;
  t211 = -1.*t183*t50;
  t212 = -1.*t178*t106;
  t213 = t210 + t211 + t212;
  t214 = t71*t213;
  t216 = t183*t71;
  t217 = t178*t118;
  t218 = t215 + t216 + t217;
  t219 = t50*t218;
  t220 = t214 + t219;
  t223 = t10*t13*t171;
  t225 = t223 + t188 + t224;
  t226 = t225*t99;
  t228 = t171*t41;
  t229 = t227 + t228 + t191;
  t230 = t37*t10*t229;
  t231 = t226 + t230;
  t233 = -1.*t10*t13*t171;
  t235 = t233 + t200 + t234;
  t236 = t235*t114;
  t238 = -1.*t171*t66;
  t239 = t237 + t203 + t238;
  t241 = t37*t10*t239;
  t242 = t236 + t241;
  t246 = -1.*t171*t41;
  t247 = t244 + t246 + t210;
  t248 = t114*t247;
  t251 = t171*t66;
  t252 = t249 + t215 + t251;
  t253 = t99*t252;
  t254 = t248 + t253;
  t267 = t25*t156*t38;
  t268 = t266 + t249 + t267;
  t269 = t10*t32*t268;
  t270 = t32*t25*t156;
  t273 = t244 + t270 + t271;
  t277 = -1.*t10*t38*t273;
  t278 = t269 + t277;
  t257 = t10*t156;
  t258 = t234 + t257;
  t259 = -1.*t10*t258*t38;
  t260 = -1.*t32*t168;
  t261 = -1.*t25*t156*t38;
  t262 = t260 + t237 + t261;
  t263 = t25*t262;
  t264 = t259 + t263;
  t281 = -1.*t10*t156;
  t282 = t224 + t281;
  t283 = t10*t32*t282;
  t285 = -1.*t32*t25*t156;
  t286 = t168*t38;
  t287 = t227 + t285 + t286;
  t289 = t25*t287;
  t290 = t283 + t289;
  t295 = -1.*t32*t154;
  t296 = t295 + t271;
  t297 = t32*t296;
  t298 = -1.*t154*t38;
  t299 = t266 + t298;
  t300 = t38*t299;
  t301 = t297 + t300;
  t129 = 4.566*t27*t128;
  t137 = 4.566*t50*t135;
  t142 = 4.566*t71*t140;
  t143 = t129 + t137 + t142;
  t317 = 4.566*t128*t90;
  t318 = 4.566*t135*t110;
  t319 = 4.566*t140*t121;
  t320 = t317 + t318 + t319;
  t197 = 4.566*t71*t196;
  t209 = 4.566*t50*t208;
  t221 = 4.566*t27*t220;
  t222 = t197 + t209 + t221;
  t321 = 4.566*t121*t196;
  t322 = 4.566*t110*t208;
  t323 = 4.566*t90*t220;
  t324 = t321 + t322 + t323;
  t347 = 4.566*t140*t196;
  t348 = 4.566*t135*t208;
  t349 = 4.566*t128*t220;
  t350 = t347 + t348 + t349;
  t371 = 0.047677*t27;
  t372 = -0.006348*t50;
  t373 = -0.00013*t71;
  t232 = 4.566*t71*t231;
  t243 = 4.566*t50*t242;
  t255 = 4.566*t27*t254;
  t256 = t232 + t243 + t255;
  t325 = 4.566*t231*t121;
  t326 = 4.566*t110*t242;
  t327 = 4.566*t90*t254;
  t328 = t325 + t326 + t327;
  t351 = 4.566*t231*t140;
  t352 = 4.566*t135*t242;
  t353 = 4.566*t128*t254;
  t354 = t351 + t352 + t353;
  t366 = -0.006348*t27;
  t367 = 0.009317*t50;
  t368 = -0.002347*t71;
  t369 = t366 + t367 + t368;
  t374 = t371 + t372 + t373;
  t376 = -0.00013*t27;
  t377 = -0.002347*t50;
  t378 = 0.045815*t71;
  t379 = t376 + t377 + t378;
  t403 = 4.566*t231*t196;
  t404 = 4.566*t242*t208;
  t405 = 4.566*t254*t220;
  t388 = -0.006348*t37*t10;
  t389 = 0.009317*t99;
  t390 = -0.002347*t114;
  t391 = t388 + t389 + t390;
  t393 = 0.047677*t37*t10;
  t394 = -0.006348*t99;
  t395 = -0.00013*t114;
  t396 = t393 + t394 + t395;
  t398 = -0.00013*t37*t10;
  t399 = -0.002347*t99;
  t400 = 0.045815*t114;
  t401 = t398 + t399 + t400;
  t407 = -0.006348*t10*t32;
  t408 = 0.047677*t25;
  t409 = 0.00013*t10*t38;
  t410 = t407 + t408 + t409;
  t412 = 0.009317*t10*t32;
  t413 = -0.006348*t25;
  t414 = 0.002347*t10*t38;
  t415 = t412 + t413 + t414;
  t417 = -0.002347*t10*t32;
  t418 = -0.00013*t25;
  t419 = -0.045815*t10*t38;
  t420 = t417 + t418 + t419;
  t426 = -0.00013*t32;
  t427 = -0.006348*t38;
  t428 = t426 + t427;
  t430 = -0.002347*t32;
  t431 = 0.009317*t38;
  t432 = t430 + t431;
  t434 = 0.045815*t32;
  t435 = -0.002347*t38;
  t436 = t434 + t435;
  t265 = 4.566*t50*t264;
  t279 = 4.566*t27*t278;
  t291 = 4.566*t71*t290;
  t292 = t265 + t279 + t291;
  t329 = 4.566*t90*t278;
  t330 = 4.566*t264*t110;
  t331 = 4.566*t290*t121;
  t332 = t329 + t330 + t331;
  t355 = 4.566*t128*t278;
  t356 = 4.566*t264*t135;
  t357 = 4.566*t290*t140;
  t358 = t355 + t356 + t357;
  t422 = 4.566*t290*t196;
  t423 = 4.566*t264*t208;
  t424 = 4.566*t278*t220;
  t462 = 4.566*t290*t231;
  t463 = 4.566*t264*t242;
  t464 = 4.566*t278*t254;
  t293 = -0.44150937000000007*t32*t50;
  t294 = 0.44150937000000007*t38*t71;
  t302 = 4.566*t27*t301;
  t303 = t293 + t294 + t302;
  t333 = 4.566*t90*t301;
  t334 = -0.44150937000000007*t32*t110;
  t335 = 0.44150937000000007*t38*t121;
  t336 = t333 + t334 + t335;
  t359 = 4.566*t128*t301;
  t360 = -0.44150937000000007*t32*t135;
  t361 = 0.44150937000000007*t38*t140;
  t362 = t359 + t360 + t361;
  t438 = 0.44150937000000007*t38*t196;
  t439 = -0.44150937000000007*t32*t208;
  t440 = 4.566*t301*t220;
  t469 = 0.44150937000000007*t38*t231;
  t470 = -0.44150937000000007*t32*t242;
  t471 = 4.566*t301*t254;
  t497 = -0.44150937000000007*t32*t264;
  t498 = 0.44150937000000007*t38*t290;
  t499 = 4.566*t278*t301;
  t304 = 0.0010090859999998686*t50;
  t305 = -0.232925358*t71;
  t306 = t304 + t305;
  t337 = 0.0010090859999998686*t110;
  t338 = -0.232925358*t121;
  t339 = t337 + t338;
  t363 = 0.0010090859999998686*t135;
  t364 = -0.232925358*t140;
  t365 = t363 + t364;
  t442 = -0.232925358*t196;
  t443 = 0.0010090859999998686*t208;
  t444 = t371 + t372 + t373 + t442 + t443;
  t473 = -0.232925358*t231;
  t474 = 0.0010090859999998686*t242;
  t475 = t393 + t394 + t395 + t473 + t474;
  t501 = 0.0010090859999998686*t264;
  t502 = -0.232925358*t290;
  t503 = t407 + t408 + t409 + t501 + t502;
  t522 = -0.0002275735707699873*t32;
  t523 = -0.028870717491810003*t38;
  t524 = t522 + t523;
  p_output1[0]=4.566*Power(t27,2) + 4.566*Power(t50,2) + 4.566*Power(t71,2);
  p_output1[1]=t123;
  p_output1[2]=t143;
  p_output1[3]=t222;
  p_output1[4]=t256;
  p_output1[5]=t292;
  p_output1[6]=t303;
  p_output1[7]=t306;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=t123;
  p_output1[19]=4.566*Power(t110,2) + 4.566*Power(t121,2) + 4.566*Power(t90,2);
  p_output1[20]=t320;
  p_output1[21]=t324;
  p_output1[22]=t328;
  p_output1[23]=t332;
  p_output1[24]=t336;
  p_output1[25]=t339;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=t143;
  p_output1[37]=t320;
  p_output1[38]=4.566*Power(t128,2) + 4.566*Power(t135,2) + 4.566*Power(t140,2);
  p_output1[39]=t350;
  p_output1[40]=t354;
  p_output1[41]=t358;
  p_output1[42]=t362;
  p_output1[43]=t365;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=t222;
  p_output1[55]=t324;
  p_output1[56]=t350;
  p_output1[57]=4.566*Power(t196,2) + 4.566*Power(t208,2) + 4.566*Power(t220,2) + t27*t374 + t369*t50 + t379*t71;
  p_output1[58]=t27*t396 + t403 + t404 + t405 + t391*t50 + t401*t71;
  p_output1[59]=t27*t410 + t422 + t423 + t424 + t415*t50 + t420*t71;
  p_output1[60]=t27*t428 + t438 + t439 + t440 + t432*t50 + t436*t71;
  p_output1[61]=t444;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=t256;
  p_output1[73]=t328;
  p_output1[74]=t354;
  p_output1[75]=t10*t37*t374 + t114*t379 + t403 + t404 + t405 + t369*t99;
  p_output1[76]=4.566*Power(t231,2) + 4.566*Power(t242,2) + 4.566*Power(t254,2) + t10*t37*t396 + t114*t401 + t391*t99;
  p_output1[77]=t10*t37*t410 + t114*t420 + t462 + t463 + t464 + t415*t99;
  p_output1[78]=t10*t37*t428 + t114*t436 + t469 + t470 + t471 + t432*t99;
  p_output1[79]=t475;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=t292;
  p_output1[91]=t332;
  p_output1[92]=t358;
  p_output1[93]=t10*t32*t369 + t25*t374 - 1.*t10*t379*t38 + t422 + t423 + t424;
  p_output1[94]=t10*t32*t391 + t25*t396 - 1.*t10*t38*t401 + t462 + t463 + t464;
  p_output1[95]=4.566*Power(t264,2) + 4.566*Power(t278,2) + 4.566*Power(t290,2) + t25*t410 + t10*t32*t415 - 1.*t10*t38*t420;
  p_output1[96]=t25*t428 + t10*t32*t432 - 1.*t10*t38*t436 + t497 + t498 + t499;
  p_output1[97]=t503;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=t303;
  p_output1[109]=t336;
  p_output1[110]=t362;
  p_output1[111]=t32*t379 + t369*t38 + t438 + t439 + t440;
  p_output1[112]=t38*t391 + t32*t401 + t469 + t470 + t471;
  p_output1[113]=t38*t415 + t32*t420 + t497 + t498 + t499;
  p_output1[114]=4.566*Power(t301,2) + 0.04269174853215001*Power(t32,2) + 0.04269174853215001*Power(t38,2) + t38*t432 + t32*t436;
  p_output1[115]=t524;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=t306;
  p_output1[127]=t339;
  p_output1[128]=t365;
  p_output1[129]=t444;
  p_output1[130]=t475;
  p_output1[131]=t503;
  p_output1[132]=t524;
  p_output1[133]=0.05955944429566;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0;
  p_output1[172]=0;
  p_output1[173]=0;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=0;
  p_output1[181]=0;
  p_output1[182]=0;
  p_output1[183]=0;
  p_output1[184]=0;
  p_output1[185]=0;
  p_output1[186]=0;
  p_output1[187]=0;
  p_output1[188]=0;
  p_output1[189]=0;
  p_output1[190]=0;
  p_output1[191]=0;
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=0;
  p_output1[208]=0;
  p_output1[209]=0;
  p_output1[210]=0;
  p_output1[211]=0;
  p_output1[212]=0;
  p_output1[213]=0;
  p_output1[214]=0;
  p_output1[215]=0;
  p_output1[216]=0;
  p_output1[217]=0;
  p_output1[218]=0;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=0;
  p_output1[222]=0;
  p_output1[223]=0;
  p_output1[224]=0;
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=0;
  p_output1[229]=0;
  p_output1[230]=0;
  p_output1[231]=0;
  p_output1[232]=0;
  p_output1[233]=0;
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=0;
  p_output1[241]=0;
  p_output1[242]=0;
  p_output1[243]=0;
  p_output1[244]=0;
  p_output1[245]=0;
  p_output1[246]=0;
  p_output1[247]=0;
  p_output1[248]=0;
  p_output1[249]=0;
  p_output1[250]=0;
  p_output1[251]=0;
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=0;
  p_output1[259]=0;
  p_output1[260]=0;
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=0;
  p_output1[265]=0;
  p_output1[266]=0;
  p_output1[267]=0;
  p_output1[268]=0;
  p_output1[269]=0;
  p_output1[270]=0;
  p_output1[271]=0;
  p_output1[272]=0;
  p_output1[273]=0;
  p_output1[274]=0;
  p_output1[275]=0;
  p_output1[276]=0;
  p_output1[277]=0;
  p_output1[278]=0;
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0;
  p_output1[283]=0;
  p_output1[284]=0;
  p_output1[285]=0;
  p_output1[286]=0;
  p_output1[287]=0;
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=0;
  p_output1[294]=0;
  p_output1[295]=0;
  p_output1[296]=0;
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=0;
  p_output1[301]=0;
  p_output1[302]=0;
  p_output1[303]=0;
  p_output1[304]=0;
  p_output1[305]=0;
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=0;
  p_output1[313]=0;
  p_output1[314]=0;
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=0;
  p_output1[318]=0;
  p_output1[319]=0;
  p_output1[320]=0;
  p_output1[321]=0;
  p_output1[322]=0;
  p_output1[323]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Mmat3_b1_description.hh"

namespace SymFunction
{

void Mmat3_b1_description_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
