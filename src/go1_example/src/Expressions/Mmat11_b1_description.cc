/*
 * Automatically Generated from Mathematica.
 * Sun 22 Sep 2024 09:05:54 GMT-05:00
 */

#include "math2mat.hpp"
#include "mdefs.hpp"

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t339;
  double t530;
  double t525;
  double t489;
  double t538;
  double t425;
  double t527;
  double t546;
  double t547;
  double t577;
  double t568;
  double t553;
  double t561;
  double t564;
  double t609;
  double t624;
  double t629;
  double t639;
  double t640;
  double t642;
  double t678;
  double t681;
  double t683;
  double t684;
  double t685;
  double t687;
  double t707;
  double t709;
  double t710;
  double t716;
  double t717;
  double t731;
  double t698;
  double t703;
  double t704;
  double t711;
  double t733;
  double t736;
  double t743;
  double t744;
  double t749;
  double t705;
  double t754;
  double t764;
  double t775;
  double t782;
  double t790;
  double t827;
  double t821;
  double t576;
  double t589;
  double t593;
  double t600;
  double t608;
  double t631;
  double t633;
  double t634;
  double t638;
  double t643;
  double t648;
  double t652;
  double t653;
  double t654;
  double t660;
  double t661;
  double t664;
  double t665;
  double t666;
  double t670;
  double t672;
  double t673;
  double t741;
  double t751;
  double t752;
  double t753;
  double t755;
  double t756;
  double t757;
  double t758;
  double t762;
  double t765;
  double t772;
  double t773;
  double t774;
  double t776;
  double t777;
  double t778;
  double t779;
  double t780;
  double t784;
  double t785;
  double t788;
  double t789;
  double t791;
  double t792;
  double t793;
  double t794;
  double t795;
  double t800;
  double t801;
  double t803;
  double t804;
  double t805;
  double t806;
  double t807;
  double t808;
  double t810;
  double t811;
  double t812;
  double t814;
  double t815;
  double t816;
  double t818;
  double t819;
  double t822;
  double t825;
  double t826;
  double t830;
  double t831;
  double t832;
  double t834;
  double t837;
  double t838;
  double t840;
  double t841;
  double t842;
  double t843;
  double t844;
  double t662;
  double t667;
  double t676;
  double t677;
  double t863;
  double t864;
  double t865;
  double t866;
  double t763;
  double t781;
  double t798;
  double t799;
  double t867;
  double t869;
  double t870;
  double t871;
  double t897;
  double t898;
  double t899;
  double t900;
  double t920;
  double t921;
  double t922;
  double t809;
  double t820;
  double t835;
  double t836;
  double t872;
  double t873;
  double t875;
  double t879;
  double t901;
  double t902;
  double t903;
  double t904;
  double t912;
  double t913;
  double t914;
  double t915;
  double t923;
  double t925;
  double t926;
  double t927;
  double t928;
  double t955;
  double t956;
  double t957;
  double t947;
  double t948;
  double t949;
  double t950;
  double t942;
  double t943;
  double t944;
  double t945;
  double t937;
  double t938;
  double t939;
  double t940;
  double t963;
  double t964;
  double t965;
  double t967;
  double t968;
  double t969;
  double t959;
  double t960;
  double t961;
  double t847;
  double t848;
  double t849;
  double t851;
  double t880;
  double t881;
  double t883;
  double t884;
  double t905;
  double t906;
  double t907;
  double t908;
  double t971;
  double t972;
  double t973;
  double t995;
  double t996;
  double t997;
  double t852;
  double t853;
  double t854;
  double t885;
  double t887;
  double t888;
  double t909;
  double t910;
  double t911;
  double t975;
  double t976;
  double t977;
  double t999;
  double t1000;
  double t1001;
  double t1017;
  double t1018;
  double t1019;
  t339 = Cos(var1[4]);
  t530 = Cos(var1[15]);
  t525 = Sin(var1[4]);
  t489 = Sin(var1[15]);
  t538 = Sin(var1[5]);
  t425 = Cos(var1[5]);
  t527 = t489*t525;
  t546 = -1.*t530*t339*t538;
  t547 = t527 + t546;
  t577 = Cos(var1[3]);
  t568 = Sin(var1[3]);
  t553 = t530*t525;
  t561 = t339*t489*t538;
  t564 = t553 + t561;
  t609 = t339*t489;
  t624 = t530*t525*t538;
  t629 = t609 + t624;
  t639 = t530*t339;
  t640 = -1.*t489*t525*t538;
  t642 = t639 + t640;
  t678 = -1.*t530;
  t681 = 1. + t678;
  t683 = 0.072*t681;
  t684 = 0.081713*t530;
  t685 = -0.000097*t489;
  t687 = t683 + t684 + t685;
  t707 = 0.000097*t530;
  t709 = 0.009713*t489;
  t710 = t707 + t709;
  t716 = -0.327437*t425;
  t717 = -1.*t687*t538;
  t731 = t716 + t717;
  t698 = t425*t687;
  t703 = -0.327437*t538;
  t704 = t698 + t703;
  t711 = t710*t525;
  t733 = t339*t731;
  t736 = t711 + t733;
  t743 = t339*t710;
  t744 = -1.*t525*t731;
  t749 = t743 + t744;
  t705 = -1.*t704*t538;
  t754 = t530*t425*t704;
  t764 = t704*t538;
  t775 = t425*t489*t704;
  t782 = -1.*t530*t425*t704;
  t790 = -1.*t425*t489*t704;
  t827 = t530*t710;
  t821 = -1.*t710*t489;
  t576 = t425*t568*t525;
  t589 = t577*t538;
  t593 = t576 + t589;
  t600 = 2.416*t339*t425*t593;
  t608 = t530*t577*t425;
  t631 = -1.*t568*t629;
  t633 = t608 + t631;
  t634 = 2.416*t547*t633;
  t638 = -1.*t577*t425*t489;
  t643 = -1.*t568*t642;
  t648 = t638 + t643;
  t652 = 2.416*t564*t648;
  t653 = t600 + t634 + t652;
  t654 = -1.*t577*t425*t525;
  t660 = t568*t538;
  t661 = t654 + t660;
  t664 = t530*t425*t568;
  t665 = t577*t629;
  t666 = t664 + t665;
  t670 = -1.*t425*t489*t568;
  t672 = t577*t642;
  t673 = t670 + t672;
  t741 = -1.*t339*t425*t736;
  t751 = t425*t525*t749;
  t752 = t705 + t741 + t751;
  t753 = t547*t752;
  t755 = t547*t736;
  t756 = t629*t749;
  t757 = t754 + t755 + t756;
  t758 = t339*t425*t757;
  t762 = t753 + t758;
  t765 = t339*t425*t736;
  t772 = -1.*t425*t525*t749;
  t773 = t764 + t765 + t772;
  t774 = t564*t773;
  t776 = -1.*t564*t736;
  t777 = -1.*t642*t749;
  t778 = t775 + t776 + t777;
  t779 = t339*t425*t778;
  t780 = t774 + t779;
  t784 = -1.*t547*t736;
  t785 = -1.*t629*t749;
  t788 = t782 + t784 + t785;
  t789 = t564*t788;
  t791 = t564*t736;
  t792 = t642*t749;
  t793 = t790 + t791 + t792;
  t794 = t547*t793;
  t795 = t789 + t794;
  t800 = -1.*t425*t731;
  t801 = t705 + t800;
  t803 = t530*t425*t801;
  t804 = t710*t489;
  t805 = -1.*t530*t538*t731;
  t806 = t804 + t754 + t805;
  t807 = t538*t806;
  t808 = t803 + t807;
  t810 = t425*t731;
  t811 = t764 + t810;
  t812 = -1.*t425*t489*t811;
  t814 = -1.*t530*t710;
  t815 = -1.*t489*t538*t731;
  t816 = t814 + t775 + t815;
  t818 = t538*t816;
  t819 = t812 + t818;
  t822 = t530*t538*t731;
  t825 = t821 + t782 + t822;
  t826 = -1.*t425*t489*t825;
  t830 = t489*t538*t731;
  t831 = t827 + t790 + t830;
  t832 = t530*t425*t831;
  t834 = t826 + t832;
  t837 = -1.*t687*t489;
  t838 = t827 + t837;
  t840 = t489*t838;
  t841 = -1.*t530*t687;
  t842 = t841 + t821;
  t843 = t530*t842;
  t844 = t840 + t843;
  t662 = 2.416*t339*t425*t661;
  t667 = 2.416*t547*t666;
  t676 = 2.416*t564*t673;
  t677 = t662 + t667 + t676;
  t863 = 2.416*t593*t661;
  t864 = 2.416*t666*t633;
  t865 = 2.416*t673*t648;
  t866 = t863 + t864 + t865;
  t763 = 2.416*t564*t762;
  t781 = 2.416*t547*t780;
  t798 = 2.416*t339*t425*t795;
  t799 = t763 + t781 + t798;
  t867 = 2.416*t648*t762;
  t869 = 2.416*t633*t780;
  t870 = 2.416*t593*t795;
  t871 = t867 + t869 + t870;
  t897 = 2.416*t673*t762;
  t898 = 2.416*t666*t780;
  t899 = 2.416*t661*t795;
  t900 = t897 + t898 + t899;
  t920 = 0.004552*t339*t425;
  t921 = 0.000286*t547;
  t922 = 3.e-6*t564;
  t809 = 2.416*t564*t808;
  t820 = 2.416*t547*t819;
  t835 = 2.416*t339*t425*t834;
  t836 = t809 + t820 + t835;
  t872 = 2.416*t648*t808;
  t873 = 2.416*t633*t819;
  t875 = 2.416*t593*t834;
  t879 = t872 + t873 + t875;
  t901 = 2.416*t673*t808;
  t902 = 2.416*t666*t819;
  t903 = 2.416*t661*t834;
  t904 = t901 + t902 + t903;
  t912 = 0.000286*t339*t425;
  t913 = 0.009792*t547;
  t914 = 2.e-6*t564;
  t915 = t912 + t913 + t914;
  t923 = t920 + t921 + t922;
  t925 = 3.e-6*t339*t425;
  t926 = 2.e-6*t547;
  t927 = 0.006644*t564;
  t928 = t925 + t926 + t927;
  t955 = 2.416*t808*t762;
  t956 = 2.416*t819*t780;
  t957 = 2.416*t834*t795;
  t947 = 2.e-6*t530*t425;
  t948 = -0.006644*t425*t489;
  t949 = 3.e-6*t538;
  t950 = t947 + t948 + t949;
  t942 = 0.009792*t530*t425;
  t943 = -2.e-6*t425*t489;
  t944 = 0.000286*t538;
  t945 = t942 + t943 + t944;
  t937 = 0.000286*t530*t425;
  t938 = -3.e-6*t425*t489;
  t939 = 0.004552*t538;
  t940 = t937 + t938 + t939;
  t963 = 2.e-6*t530;
  t964 = 0.009792*t489;
  t965 = t963 + t964;
  t967 = 0.006644*t530;
  t968 = 2.e-6*t489;
  t969 = t967 + t968;
  t959 = 3.e-6*t530;
  t960 = 0.000286*t489;
  t961 = t959 + t960;
  t847 = 2.416*t339*t425*t844;
  t848 = -0.7910877919999999*t530*t547;
  t849 = 0.7910877919999999*t489*t564;
  t851 = t847 + t848 + t849;
  t880 = 2.416*t844*t593;
  t881 = -0.7910877919999999*t530*t633;
  t883 = 0.7910877919999999*t489*t648;
  t884 = t880 + t881 + t883;
  t905 = 2.416*t844*t661;
  t906 = -0.7910877919999999*t530*t666;
  t907 = 0.7910877919999999*t489*t673;
  t908 = t905 + t906 + t907;
  t971 = 0.7910877919999999*t489*t762;
  t972 = -0.7910877919999999*t530*t780;
  t973 = 2.416*t844*t795;
  t995 = 0.7910877919999999*t489*t808;
  t996 = -0.7910877919999999*t530*t819;
  t997 = 2.416*t844*t834;
  t852 = -0.00023435199999999998*t547;
  t853 = 0.023466607999999996*t564;
  t854 = t852 + t853;
  t885 = -0.00023435199999999998*t633;
  t887 = 0.023466607999999996*t648;
  t888 = t885 + t887;
  t909 = -0.00023435199999999998*t666;
  t910 = 0.023466607999999996*t673;
  t911 = t909 + t910;
  t975 = 0.023466607999999996*t762;
  t976 = -0.00023435199999999998*t780;
  t977 = t920 + t921 + t922 + t975 + t976;
  t999 = 0.023466607999999996*t808;
  t1000 = -0.00023435199999999998*t819;
  t1001 = t937 + t938 + t939 + t999 + t1000;
  t1017 = 0.00007973551582399999*t530;
  t1018 = 0.007969835723695999*t489;
  t1019 = t1017 + t1018;
  p_output1[0]=2.416*Power(t339,2)*Power(t425,2) + 2.416*Power(t547,2) + 2.416*Power(t564,2);
  p_output1[1]=t653;
  p_output1[2]=t677;
  p_output1[3]=t799;
  p_output1[4]=t836;
  p_output1[5]=t851;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=t854;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=t653;
  p_output1[19]=2.416*Power(t593,2) + 2.416*Power(t633,2) + 2.416*Power(t648,2);
  p_output1[20]=t866;
  p_output1[21]=t871;
  p_output1[22]=t879;
  p_output1[23]=t884;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=t888;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=t677;
  p_output1[37]=t866;
  p_output1[38]=2.416*Power(t661,2) + 2.416*Power(t666,2) + 2.416*Power(t673,2);
  p_output1[39]=t900;
  p_output1[40]=t904;
  p_output1[41]=t908;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=t911;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=t799;
  p_output1[55]=t871;
  p_output1[56]=t900;
  p_output1[57]=2.416*Power(t762,2) + 2.416*Power(t780,2) + 2.416*Power(t795,2) + t547*t915 + t339*t425*t923 + t564*t928;
  p_output1[58]=t339*t425*t940 + t547*t945 + t564*t950 + t955 + t956 + t957;
  p_output1[59]=t339*t425*t961 + t547*t965 + t564*t969 + t971 + t972 + t973;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=t977;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=t836;
  p_output1[73]=t879;
  p_output1[74]=t904;
  p_output1[75]=t425*t530*t915 + t538*t923 - 1.*t425*t489*t928 + t955 + t956 + t957;
  p_output1[76]=2.416*Power(t808,2) + 2.416*Power(t819,2) + 2.416*Power(t834,2) + t538*t940 + t425*t530*t945 - 1.*t425*t489*t950;
  p_output1[77]=t538*t961 + t425*t530*t965 - 1.*t425*t489*t969 + t995 + t996 + t997;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=t1001;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=t851;
  p_output1[91]=t884;
  p_output1[92]=t908;
  p_output1[93]=t489*t915 + t530*t928 + t971 + t972 + t973;
  p_output1[94]=t489*t945 + t530*t950 + t995 + t996 + t997;
  p_output1[95]=0.25903141334910396*Power(t489,2) + 0.25903141334910396*Power(t530,2) + 2.416*Power(t844,2) + t489*t965 + t530*t969;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=t1019;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0;
  p_output1[172]=0;
  p_output1[173]=0;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=0;
  p_output1[181]=0;
  p_output1[182]=0;
  p_output1[183]=0;
  p_output1[184]=0;
  p_output1[185]=0;
  p_output1[186]=0;
  p_output1[187]=0;
  p_output1[188]=0;
  p_output1[189]=0;
  p_output1[190]=0;
  p_output1[191]=0;
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=0;
  p_output1[208]=0;
  p_output1[209]=0;
  p_output1[210]=0;
  p_output1[211]=0;
  p_output1[212]=0;
  p_output1[213]=0;
  p_output1[214]=0;
  p_output1[215]=0;
  p_output1[216]=0;
  p_output1[217]=0;
  p_output1[218]=0;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=0;
  p_output1[222]=0;
  p_output1[223]=0;
  p_output1[224]=0;
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=0;
  p_output1[229]=0;
  p_output1[230]=0;
  p_output1[231]=0;
  p_output1[232]=0;
  p_output1[233]=0;
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=0;
  p_output1[241]=0;
  p_output1[242]=0;
  p_output1[243]=0;
  p_output1[244]=0;
  p_output1[245]=0;
  p_output1[246]=0;
  p_output1[247]=0;
  p_output1[248]=0;
  p_output1[249]=0;
  p_output1[250]=0;
  p_output1[251]=0;
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=0;
  p_output1[259]=0;
  p_output1[260]=0;
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=0;
  p_output1[265]=0;
  p_output1[266]=0;
  p_output1[267]=0;
  p_output1[268]=0;
  p_output1[269]=0;
  p_output1[270]=t854;
  p_output1[271]=t888;
  p_output1[272]=t911;
  p_output1[273]=t977;
  p_output1[274]=t1001;
  p_output1[275]=t1019;
  p_output1[276]=0;
  p_output1[277]=0;
  p_output1[278]=0;
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0;
  p_output1[283]=0;
  p_output1[284]=0;
  p_output1[285]=0.004779953895647999;
  p_output1[286]=0;
  p_output1[287]=0;
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=0;
  p_output1[294]=0;
  p_output1[295]=0;
  p_output1[296]=0;
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=0;
  p_output1[301]=0;
  p_output1[302]=0;
  p_output1[303]=0;
  p_output1[304]=0;
  p_output1[305]=0;
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=0;
  p_output1[313]=0;
  p_output1[314]=0;
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=0;
  p_output1[318]=0;
  p_output1[319]=0;
  p_output1[320]=0;
  p_output1[321]=0;
  p_output1[322]=0;
  p_output1[323]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Mmat11_b1_description.hh"

namespace SymFunction
{

void Mmat11_b1_description_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
