/*
 * Automatically Generated from Mathematica.
 * Sun 22 Sep 2024 09:05:51 GMT-05:00
 */

#include "math2mat.hpp"
#include "mdefs.hpp"

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t112;
  double t83;
  double t124;
  double t140;
  double t56;
  double t128;
  double t165;
  double t163;
  double t90;
  double t129;
  double t134;
  double t150;
  double t169;
  double t174;
  double t176;
  double t186;
  double t193;
  double t219;
  double t225;
  double t206;
  double t207;
  double t208;
  double t213;
  double t214;
  double t215;
  double t226;
  double t227;
  double t232;
  double t247;
  double t257;
  double t262;
  double t268;
  double t282;
  double t289;
  double t300;
  double t301;
  double t302;
  double t304;
  double t308;
  double t309;
  double t352;
  double t353;
  double t354;
  double t364;
  double t365;
  double t366;
  double t368;
  double t372;
  double t375;
  double t345;
  double t347;
  double t349;
  double t350;
  double t355;
  double t356;
  double t381;
  double t382;
  double t385;
  double t388;
  double t389;
  double t390;
  double t362;
  double t376;
  double t377;
  double t386;
  double t392;
  double t393;
  double t395;
  double t397;
  double t399;
  double t378;
  double t404;
  double t411;
  double t417;
  double t429;
  double t435;
  double t473;
  double t468;
  double t454;
  double t458;
  double t444;
  double t448;
  double t486;
  double t481;
  double t221;
  double t234;
  double t235;
  double t241;
  double t266;
  double t296;
  double t297;
  double t299;
  double t303;
  double t310;
  double t311;
  double t319;
  double t320;
  double t321;
  double t324;
  double t325;
  double t327;
  double t334;
  double t335;
  double t338;
  double t339;
  double t340;
  double t394;
  double t400;
  double t402;
  double t403;
  double t405;
  double t406;
  double t407;
  double t408;
  double t409;
  double t412;
  double t413;
  double t415;
  double t416;
  double t418;
  double t419;
  double t421;
  double t425;
  double t426;
  double t430;
  double t431;
  double t433;
  double t434;
  double t437;
  double t438;
  double t439;
  double t440;
  double t441;
  double t445;
  double t446;
  double t447;
  double t449;
  double t450;
  double t451;
  double t452;
  double t455;
  double t456;
  double t457;
  double t459;
  double t460;
  double t465;
  double t466;
  double t470;
  double t471;
  double t472;
  double t475;
  double t476;
  double t477;
  double t478;
  double t482;
  double t483;
  double t484;
  double t485;
  double t487;
  double t488;
  double t489;
  double t491;
  double t492;
  double t493;
  double t494;
  double t495;
  double t500;
  double t504;
  double t505;
  double t508;
  double t509;
  double t510;
  double t512;
  double t513;
  double t514;
  double t516;
  double t517;
  double t520;
  double t521;
  double t522;
  double t523;
  double t524;
  double t525;
  double t526;
  double t326;
  double t337;
  double t341;
  double t344;
  double t544;
  double t545;
  double t546;
  double t547;
  double t410;
  double t427;
  double t442;
  double t443;
  double t548;
  double t549;
  double t550;
  double t551;
  double t574;
  double t575;
  double t576;
  double t577;
  double t598;
  double t599;
  double t600;
  double t453;
  double t467;
  double t479;
  double t480;
  double t552;
  double t553;
  double t554;
  double t555;
  double t578;
  double t579;
  double t580;
  double t581;
  double t593;
  double t594;
  double t595;
  double t596;
  double t601;
  double t603;
  double t604;
  double t605;
  double t606;
  double t630;
  double t631;
  double t632;
  double t625;
  double t626;
  double t627;
  double t628;
  double t615;
  double t616;
  double t617;
  double t618;
  double t620;
  double t621;
  double t622;
  double t623;
  double t634;
  double t635;
  double t636;
  double t637;
  double t644;
  double t645;
  double t646;
  double t647;
  double t639;
  double t640;
  double t641;
  double t642;
  double t653;
  double t654;
  double t655;
  double t661;
  double t662;
  double t663;
  double t657;
  double t658;
  double t659;
  double t490;
  double t506;
  double t518;
  double t519;
  double t556;
  double t557;
  double t558;
  double t559;
  double t582;
  double t583;
  double t584;
  double t585;
  double t649;
  double t650;
  double t651;
  double t689;
  double t690;
  double t691;
  double t527;
  double t528;
  double t529;
  double t530;
  double t560;
  double t561;
  double t562;
  double t563;
  double t586;
  double t587;
  double t588;
  double t589;
  double t665;
  double t666;
  double t667;
  double t696;
  double t697;
  double t698;
  double t724;
  double t725;
  double t726;
  double t531;
  double t532;
  double t533;
  double t564;
  double t565;
  double t566;
  double t590;
  double t591;
  double t592;
  double t669;
  double t670;
  double t671;
  double t700;
  double t701;
  double t702;
  double t728;
  double t729;
  double t730;
  double t749;
  double t750;
  double t751;
  t112 = Cos(var1[9]);
  t83 = Sin(var1[4]);
  t124 = Cos(var1[4]);
  t140 = Cos(var1[10]);
  t56 = Sin(var1[9]);
  t128 = Sin(var1[5]);
  t165 = Sin(var1[10]);
  t163 = Cos(var1[5]);
  t90 = t56*t83;
  t129 = -1.*t112*t124*t128;
  t134 = t90 + t129;
  t150 = t112*t140*t83;
  t169 = t163*t165;
  t174 = t140*t56*t128;
  t176 = t169 + t174;
  t186 = t124*t176;
  t193 = t150 + t186;
  t219 = Cos(var1[3]);
  t225 = Sin(var1[3]);
  t206 = -1.*t112*t165*t83;
  t207 = t140*t163;
  t208 = -1.*t56*t165*t128;
  t213 = t207 + t208;
  t214 = t124*t213;
  t215 = t206 + t214;
  t226 = t124*t56;
  t227 = t112*t83*t128;
  t232 = t226 + t227;
  t247 = -1.*t140*t163*t56;
  t257 = t165*t128;
  t262 = t247 + t257;
  t268 = t112*t140*t124;
  t282 = -1.*t83*t176;
  t289 = t268 + t282;
  t300 = t163*t56*t165;
  t301 = t140*t128;
  t302 = t300 + t301;
  t304 = -1.*t112*t124*t165;
  t308 = -1.*t83*t213;
  t309 = t304 + t308;
  t352 = -0.051013*t140;
  t353 = 0.00022099999999997122*t165;
  t354 = t352 + t353;
  t364 = -1.*t140;
  t365 = 1. + t364;
  t366 = 0.3455*t365;
  t368 = 0.345279*t140;
  t372 = -0.051013*t165;
  t375 = t366 + t368 + t372;
  t345 = -1.*t112;
  t347 = 1. + t345;
  t349 = 0.072*t347;
  t350 = 0.168695*t112;
  t355 = -1.*t56*t354;
  t356 = t349 + t350 + t355;
  t381 = 0.09669500000000002*t56;
  t382 = t112*t354;
  t385 = t381 + t382;
  t388 = t163*t375;
  t389 = -1.*t356*t128;
  t390 = t388 + t389;
  t362 = t163*t356;
  t376 = t375*t128;
  t377 = t362 + t376;
  t386 = t385*t83;
  t392 = t124*t390;
  t393 = t386 + t392;
  t395 = t124*t385;
  t397 = -1.*t83*t390;
  t399 = t395 + t397;
  t378 = -1.*t112*t163*t377;
  t404 = t377*t262;
  t411 = t112*t163*t377;
  t417 = -1.*t302*t377;
  t429 = -1.*t377*t262;
  t435 = t302*t377;
  t473 = -1.*t112*t385*t165;
  t468 = -1.*t112*t140*t385;
  t454 = t56*t385;
  t458 = t112*t385*t165;
  t444 = -1.*t56*t385;
  t448 = t112*t140*t385;
  t486 = -1.*t375*t165;
  t481 = t140*t375;
  t221 = t112*t219*t163;
  t234 = -1.*t225*t232;
  t235 = t221 + t234;
  t241 = 4.566*t134*t235;
  t266 = t219*t262;
  t296 = -1.*t225*t289;
  t297 = t266 + t296;
  t299 = 4.566*t193*t297;
  t303 = t219*t302;
  t310 = -1.*t225*t309;
  t311 = t303 + t310;
  t319 = 4.566*t215*t311;
  t320 = t241 + t299 + t319;
  t321 = t112*t163*t225;
  t324 = t219*t232;
  t325 = t321 + t324;
  t327 = t225*t262;
  t334 = t219*t289;
  t335 = t327 + t334;
  t338 = t225*t302;
  t339 = t219*t309;
  t340 = t338 + t339;
  t394 = -1.*t134*t393;
  t400 = -1.*t232*t399;
  t402 = t378 + t394 + t400;
  t403 = t193*t402;
  t405 = t193*t393;
  t406 = t289*t399;
  t407 = t404 + t405 + t406;
  t408 = t134*t407;
  t409 = t403 + t408;
  t412 = t134*t393;
  t413 = t232*t399;
  t415 = t411 + t412 + t413;
  t416 = t215*t415;
  t418 = -1.*t393*t215;
  t419 = -1.*t399*t309;
  t421 = t417 + t418 + t419;
  t425 = t134*t421;
  t426 = t416 + t425;
  t430 = -1.*t193*t393;
  t431 = -1.*t289*t399;
  t433 = t429 + t430 + t431;
  t434 = t215*t433;
  t437 = t393*t215;
  t438 = t399*t309;
  t439 = t435 + t437 + t438;
  t440 = t193*t439;
  t441 = t434 + t440;
  t445 = t112*t128*t390;
  t446 = t444 + t445 + t378;
  t447 = t262*t446;
  t449 = t176*t390;
  t450 = t448 + t449 + t404;
  t451 = t112*t163*t450;
  t452 = t447 + t451;
  t455 = -1.*t112*t128*t390;
  t456 = t454 + t455 + t411;
  t457 = t302*t456;
  t459 = -1.*t390*t213;
  t460 = t458 + t417 + t459;
  t465 = t112*t163*t460;
  t466 = t457 + t465;
  t470 = -1.*t176*t390;
  t471 = t468 + t470 + t429;
  t472 = t302*t471;
  t475 = t390*t213;
  t476 = t473 + t435 + t475;
  t477 = t262*t476;
  t478 = t472 + t477;
  t482 = t56*t356*t165;
  t483 = t481 + t473 + t482;
  t484 = t112*t140*t483;
  t485 = t140*t56*t356;
  t487 = t468 + t485 + t486;
  t488 = -1.*t112*t165*t487;
  t489 = t484 + t488;
  t491 = t112*t356;
  t492 = t454 + t491;
  t493 = -1.*t112*t492*t165;
  t494 = -1.*t140*t375;
  t495 = -1.*t56*t356*t165;
  t500 = t494 + t458 + t495;
  t504 = t56*t500;
  t505 = t493 + t504;
  t508 = -1.*t112*t356;
  t509 = t444 + t508;
  t510 = t112*t140*t509;
  t512 = -1.*t140*t56*t356;
  t513 = t375*t165;
  t514 = t448 + t512 + t513;
  t516 = t56*t514;
  t517 = t510 + t516;
  t520 = -1.*t140*t354;
  t521 = t520 + t486;
  t522 = t140*t521;
  t523 = -1.*t354*t165;
  t524 = t481 + t523;
  t525 = t165*t524;
  t526 = t522 + t525;
  t326 = 4.566*t134*t325;
  t337 = 4.566*t193*t335;
  t341 = 4.566*t215*t340;
  t344 = t326 + t337 + t341;
  t544 = 4.566*t325*t235;
  t545 = 4.566*t335*t297;
  t546 = 4.566*t340*t311;
  t547 = t544 + t545 + t546;
  t410 = 4.566*t215*t409;
  t427 = 4.566*t193*t426;
  t442 = 4.566*t134*t441;
  t443 = t410 + t427 + t442;
  t548 = 4.566*t311*t409;
  t549 = 4.566*t297*t426;
  t550 = 4.566*t235*t441;
  t551 = t548 + t549 + t550;
  t574 = 4.566*t340*t409;
  t575 = 4.566*t335*t426;
  t576 = 4.566*t325*t441;
  t577 = t574 + t575 + t576;
  t598 = 0.047677*t134;
  t599 = 0.006348*t193;
  t600 = 0.00013*t215;
  t453 = 4.566*t215*t452;
  t467 = 4.566*t193*t466;
  t479 = 4.566*t134*t478;
  t480 = t453 + t467 + t479;
  t552 = 4.566*t452*t311;
  t553 = 4.566*t297*t466;
  t554 = 4.566*t235*t478;
  t555 = t552 + t553 + t554;
  t578 = 4.566*t452*t340;
  t579 = 4.566*t335*t466;
  t580 = 4.566*t325*t478;
  t581 = t578 + t579 + t580;
  t593 = 0.006348*t134;
  t594 = 0.009317*t193;
  t595 = -0.002347*t215;
  t596 = t593 + t594 + t595;
  t601 = t598 + t599 + t600;
  t603 = 0.00013*t134;
  t604 = -0.002347*t193;
  t605 = 0.045815*t215;
  t606 = t603 + t604 + t605;
  t630 = 4.566*t452*t409;
  t631 = 4.566*t466*t426;
  t632 = 4.566*t478*t441;
  t625 = 0.00013*t112*t163;
  t626 = 0.045815*t302;
  t627 = -0.002347*t262;
  t628 = t625 + t626 + t627;
  t615 = 0.047677*t112*t163;
  t616 = 0.00013*t302;
  t617 = 0.006348*t262;
  t618 = t615 + t616 + t617;
  t620 = 0.006348*t112*t163;
  t621 = -0.002347*t302;
  t622 = 0.009317*t262;
  t623 = t620 + t621 + t622;
  t634 = 0.006348*t112*t140;
  t635 = 0.047677*t56;
  t636 = -0.00013*t112*t165;
  t637 = t634 + t635 + t636;
  t644 = -0.002347*t112*t140;
  t645 = 0.00013*t56;
  t646 = -0.045815*t112*t165;
  t647 = t644 + t645 + t646;
  t639 = 0.009317*t112*t140;
  t640 = 0.006348*t56;
  t641 = 0.002347*t112*t165;
  t642 = t639 + t640 + t641;
  t653 = 0.00013*t140;
  t654 = 0.006348*t165;
  t655 = t653 + t654;
  t661 = 0.045815*t140;
  t662 = -0.002347*t165;
  t663 = t661 + t662;
  t657 = -0.002347*t140;
  t658 = 0.009317*t165;
  t659 = t657 + t658;
  t490 = 4.566*t489*t134;
  t506 = 4.566*t505*t193;
  t518 = 4.566*t517*t215;
  t519 = t490 + t506 + t518;
  t556 = 4.566*t489*t235;
  t557 = 4.566*t505*t297;
  t558 = 4.566*t517*t311;
  t559 = t556 + t557 + t558;
  t582 = 4.566*t489*t325;
  t583 = 4.566*t505*t335;
  t584 = 4.566*t517*t340;
  t585 = t582 + t583 + t584;
  t649 = 4.566*t517*t409;
  t650 = 4.566*t505*t426;
  t651 = 4.566*t489*t441;
  t689 = 4.566*t517*t452;
  t690 = 4.566*t505*t466;
  t691 = 4.566*t489*t478;
  t527 = 4.566*t526*t134;
  t528 = 0.44150937000000007*t140*t193;
  t529 = -0.44150937000000007*t165*t215;
  t530 = t527 + t528 + t529;
  t560 = 4.566*t526*t235;
  t561 = 0.44150937000000007*t140*t297;
  t562 = -0.44150937000000007*t165*t311;
  t563 = t560 + t561 + t562;
  t586 = 4.566*t526*t325;
  t587 = 0.44150937000000007*t140*t335;
  t588 = -0.44150937000000007*t165*t340;
  t589 = t586 + t587 + t588;
  t665 = -0.44150937000000007*t165*t409;
  t666 = 0.44150937000000007*t140*t426;
  t667 = 4.566*t526*t441;
  t696 = -0.44150937000000007*t165*t452;
  t697 = 0.44150937000000007*t140*t466;
  t698 = 4.566*t526*t478;
  t724 = 0.44150937000000007*t140*t505;
  t725 = -0.44150937000000007*t165*t517;
  t726 = 4.566*t489*t526;
  t531 = 0.0010090859999998686*t193;
  t532 = -0.232925358*t215;
  t533 = t531 + t532;
  t564 = 0.0010090859999998686*t297;
  t565 = -0.232925358*t311;
  t566 = t564 + t565;
  t590 = 0.0010090859999998686*t335;
  t591 = -0.232925358*t340;
  t592 = t590 + t591;
  t669 = -0.232925358*t409;
  t670 = 0.0010090859999998686*t426;
  t671 = t598 + t599 + t600 + t669 + t670;
  t700 = -0.232925358*t452;
  t701 = 0.0010090859999998686*t466;
  t702 = t615 + t616 + t617 + t700 + t701;
  t728 = 0.0010090859999998686*t505;
  t729 = -0.232925358*t517;
  t730 = t634 + t635 + t636 + t728 + t729;
  t749 = 0.0002275735707699873*t140;
  t750 = 0.028870717491810003*t165;
  t751 = t749 + t750;
  p_output1[0]=4.566*Power(t134,2) + 4.566*Power(t193,2) + 4.566*Power(t215,2);
  p_output1[1]=t320;
  p_output1[2]=t344;
  p_output1[3]=t443;
  p_output1[4]=t480;
  p_output1[5]=t519;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=t530;
  p_output1[10]=t533;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=t320;
  p_output1[19]=4.566*Power(t235,2) + 4.566*Power(t297,2) + 4.566*Power(t311,2);
  p_output1[20]=t547;
  p_output1[21]=t551;
  p_output1[22]=t555;
  p_output1[23]=t559;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=t563;
  p_output1[28]=t566;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=t344;
  p_output1[37]=t547;
  p_output1[38]=4.566*Power(t325,2) + 4.566*Power(t335,2) + 4.566*Power(t340,2);
  p_output1[39]=t577;
  p_output1[40]=t581;
  p_output1[41]=t585;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=t589;
  p_output1[46]=t592;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=t443;
  p_output1[55]=t551;
  p_output1[56]=t577;
  p_output1[57]=4.566*Power(t409,2) + 4.566*Power(t426,2) + 4.566*Power(t441,2) + t193*t596 + t134*t601 + t215*t606;
  p_output1[58]=t134*t618 + t193*t623 + t215*t628 + t630 + t631 + t632;
  p_output1[59]=t134*t637 + t193*t642 + t215*t647 + t649 + t650 + t651;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=t134*t655 + t193*t659 + t215*t663 + t665 + t666 + t667;
  p_output1[64]=t671;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=t480;
  p_output1[73]=t555;
  p_output1[74]=t581;
  p_output1[75]=t262*t596 + t112*t163*t601 + t302*t606 + t630 + t631 + t632;
  p_output1[76]=4.566*Power(t452,2) + 4.566*Power(t466,2) + 4.566*Power(t478,2) + t112*t163*t618 + t262*t623 + t302*t628;
  p_output1[77]=t112*t163*t637 + t262*t642 + t302*t647 + t689 + t690 + t691;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=t112*t163*t655 + t262*t659 + t302*t663 + t696 + t697 + t698;
  p_output1[82]=t702;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=t519;
  p_output1[91]=t559;
  p_output1[92]=t585;
  p_output1[93]=t112*t140*t596 + t56*t601 - 1.*t112*t165*t606 + t649 + t650 + t651;
  p_output1[94]=t56*t618 + t112*t140*t623 - 1.*t112*t165*t628 + t689 + t690 + t691;
  p_output1[95]=4.566*Power(t489,2) + 4.566*Power(t505,2) + 4.566*Power(t517,2) + t56*t637 + t112*t140*t642 - 1.*t112*t165*t647;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=t56*t655 + t112*t140*t659 - 1.*t112*t165*t663 + t724 + t725 + t726;
  p_output1[100]=t730;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=t530;
  p_output1[163]=t563;
  p_output1[164]=t589;
  p_output1[165]=t165*t596 + t140*t606 + t665 + t666 + t667;
  p_output1[166]=t165*t623 + t140*t628 + t696 + t697 + t698;
  p_output1[167]=t165*t642 + t140*t647 + t724 + t725 + t726;
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0.04269174853215001*Power(t140,2) + 0.04269174853215001*Power(t165,2) + 4.566*Power(t526,2) + t165*t659 + t140*t663;
  p_output1[172]=t751;
  p_output1[173]=0;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=t533;
  p_output1[181]=t566;
  p_output1[182]=t592;
  p_output1[183]=t671;
  p_output1[184]=t702;
  p_output1[185]=t730;
  p_output1[186]=0;
  p_output1[187]=0;
  p_output1[188]=0;
  p_output1[189]=t751;
  p_output1[190]=0.05955944429566;
  p_output1[191]=0;
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=0;
  p_output1[208]=0;
  p_output1[209]=0;
  p_output1[210]=0;
  p_output1[211]=0;
  p_output1[212]=0;
  p_output1[213]=0;
  p_output1[214]=0;
  p_output1[215]=0;
  p_output1[216]=0;
  p_output1[217]=0;
  p_output1[218]=0;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=0;
  p_output1[222]=0;
  p_output1[223]=0;
  p_output1[224]=0;
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=0;
  p_output1[229]=0;
  p_output1[230]=0;
  p_output1[231]=0;
  p_output1[232]=0;
  p_output1[233]=0;
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=0;
  p_output1[241]=0;
  p_output1[242]=0;
  p_output1[243]=0;
  p_output1[244]=0;
  p_output1[245]=0;
  p_output1[246]=0;
  p_output1[247]=0;
  p_output1[248]=0;
  p_output1[249]=0;
  p_output1[250]=0;
  p_output1[251]=0;
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=0;
  p_output1[259]=0;
  p_output1[260]=0;
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=0;
  p_output1[265]=0;
  p_output1[266]=0;
  p_output1[267]=0;
  p_output1[268]=0;
  p_output1[269]=0;
  p_output1[270]=0;
  p_output1[271]=0;
  p_output1[272]=0;
  p_output1[273]=0;
  p_output1[274]=0;
  p_output1[275]=0;
  p_output1[276]=0;
  p_output1[277]=0;
  p_output1[278]=0;
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0;
  p_output1[283]=0;
  p_output1[284]=0;
  p_output1[285]=0;
  p_output1[286]=0;
  p_output1[287]=0;
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=0;
  p_output1[294]=0;
  p_output1[295]=0;
  p_output1[296]=0;
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=0;
  p_output1[301]=0;
  p_output1[302]=0;
  p_output1[303]=0;
  p_output1[304]=0;
  p_output1[305]=0;
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=0;
  p_output1[313]=0;
  p_output1[314]=0;
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=0;
  p_output1[318]=0;
  p_output1[319]=0;
  p_output1[320]=0;
  p_output1[321]=0;
  p_output1[322]=0;
  p_output1[323]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Mmat6_b1_description.hh"

namespace SymFunction
{

void Mmat6_b1_description_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
