/*
 * Automatically Generated from Mathematica.
 * Sun 22 Sep 2024 09:05:49 GMT-05:00
 */

#include "math2mat.hpp"
#include "mdefs.hpp"

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t6;
  double t14;
  double t19;
  double t16;
  double t20;
  double t9;
  double t17;
  double t21;
  double t22;
  double t35;
  double t33;
  double t26;
  double t27;
  double t29;
  double t41;
  double t43;
  double t44;
  double t56;
  double t57;
  double t58;
  double t84;
  double t85;
  double t87;
  double t88;
  double t90;
  double t91;
  double t92;
  double t93;
  double t94;
  double t96;
  double t97;
  double t98;
  double t106;
  double t107;
  double t108;
  double t95;
  double t99;
  double t100;
  double t102;
  double t103;
  double t104;
  double t121;
  double t124;
  double t136;
  double t131;
  double t109;
  double t112;
  double t159;
  double t154;
  double t34;
  double t36;
  double t37;
  double t38;
  double t39;
  double t47;
  double t50;
  double t51;
  double t54;
  double t59;
  double t60;
  double t62;
  double t63;
  double t64;
  double t66;
  double t70;
  double t74;
  double t75;
  double t76;
  double t79;
  double t80;
  double t81;
  double t101;
  double t105;
  double t110;
  double t111;
  double t113;
  double t114;
  double t115;
  double t116;
  double t117;
  double t119;
  double t120;
  double t122;
  double t123;
  double t125;
  double t126;
  double t127;
  double t128;
  double t129;
  double t132;
  double t133;
  double t134;
  double t135;
  double t137;
  double t138;
  double t139;
  double t140;
  double t142;
  double t145;
  double t146;
  double t147;
  double t148;
  double t149;
  double t150;
  double t151;
  double t152;
  double t155;
  double t156;
  double t157;
  double t158;
  double t160;
  double t161;
  double t162;
  double t164;
  double t165;
  double t166;
  double t167;
  double t168;
  double t169;
  double t171;
  double t172;
  double t177;
  double t178;
  double t179;
  double t180;
  double t181;
  double t182;
  double t183;
  double t71;
  double t78;
  double t82;
  double t83;
  double t196;
  double t197;
  double t198;
  double t199;
  double t118;
  double t130;
  double t143;
  double t144;
  double t200;
  double t201;
  double t202;
  double t203;
  double t222;
  double t223;
  double t224;
  double t225;
  double t237;
  double t238;
  double t239;
  double t153;
  double t163;
  double t173;
  double t174;
  double t204;
  double t205;
  double t206;
  double t207;
  double t226;
  double t227;
  double t228;
  double t229;
  double t240;
  double t242;
  double t243;
  double t244;
  double t245;
  double t247;
  double t248;
  double t249;
  double t250;
  double t274;
  double t275;
  double t276;
  double t269;
  double t270;
  double t271;
  double t272;
  double t264;
  double t265;
  double t266;
  double t267;
  double t259;
  double t260;
  double t261;
  double t262;
  double t278;
  double t279;
  double t280;
  double t282;
  double t283;
  double t284;
  double t286;
  double t287;
  double t288;
  double t175;
  double t176;
  double t184;
  double t185;
  double t208;
  double t209;
  double t210;
  double t211;
  double t230;
  double t231;
  double t232;
  double t233;
  double t290;
  double t291;
  double t292;
  double t314;
  double t315;
  double t316;
  double t186;
  double t187;
  double t188;
  double t212;
  double t213;
  double t214;
  double t234;
  double t235;
  double t236;
  double t294;
  double t295;
  double t296;
  double t318;
  double t319;
  double t320;
  double t336;
  double t337;
  double t338;
  t6 = Cos(var1[4]);
  t14 = Cos(var1[6]);
  t19 = Sin(var1[4]);
  t16 = Sin(var1[5]);
  t20 = Sin(var1[6]);
  t9 = Cos(var1[5]);
  t17 = -1.*t6*t14*t16;
  t21 = t19*t20;
  t22 = t17 + t21;
  t35 = Cos(var1[3]);
  t33 = Sin(var1[3]);
  t26 = t14*t19;
  t27 = t6*t16*t20;
  t29 = t26 + t27;
  t41 = t14*t19*t16;
  t43 = t6*t20;
  t44 = t41 + t43;
  t56 = t6*t14;
  t57 = -1.*t19*t16*t20;
  t58 = t56 + t57;
  t84 = 0.327437*t9;
  t85 = -1.*t14;
  t87 = 1. + t85;
  t88 = -0.072*t87;
  t90 = -0.081713*t14;
  t91 = -0.000097*t20;
  t92 = t88 + t90 + t91;
  t93 = -1.*t16*t92;
  t94 = t84 + t93;
  t96 = 0.000097*t14;
  t97 = -0.009713*t20;
  t98 = t96 + t97;
  t106 = 0.327437*t16;
  t107 = t9*t92;
  t108 = t106 + t107;
  t95 = -1.*t19*t94;
  t99 = t6*t98;
  t100 = t95 + t99;
  t102 = t6*t94;
  t103 = t19*t98;
  t104 = t102 + t103;
  t121 = t16*t108;
  t124 = t9*t108*t20;
  t136 = -1.*t9*t108*t20;
  t131 = -1.*t9*t14*t108;
  t109 = -1.*t16*t108;
  t112 = t9*t14*t108;
  t159 = -1.*t98*t20;
  t154 = t14*t98;
  t34 = t9*t33*t19;
  t36 = t35*t16;
  t37 = t34 + t36;
  t38 = 2.416*t6*t9*t37;
  t39 = t35*t9*t14;
  t47 = -1.*t33*t44;
  t50 = t39 + t47;
  t51 = 2.416*t22*t50;
  t54 = -1.*t35*t9*t20;
  t59 = -1.*t33*t58;
  t60 = t54 + t59;
  t62 = 2.416*t29*t60;
  t63 = t38 + t51 + t62;
  t64 = -1.*t35*t9*t19;
  t66 = t33*t16;
  t70 = t64 + t66;
  t74 = t9*t14*t33;
  t75 = t35*t44;
  t76 = t74 + t75;
  t79 = -1.*t9*t33*t20;
  t80 = t35*t58;
  t81 = t79 + t80;
  t101 = t9*t19*t100;
  t105 = -1.*t6*t9*t104;
  t110 = t101 + t105 + t109;
  t111 = t110*t22;
  t113 = t100*t44;
  t114 = t104*t22;
  t115 = t112 + t113 + t114;
  t116 = t6*t9*t115;
  t117 = t111 + t116;
  t119 = -1.*t9*t19*t100;
  t120 = t6*t9*t104;
  t122 = t119 + t120 + t121;
  t123 = t122*t29;
  t125 = -1.*t104*t29;
  t126 = -1.*t100*t58;
  t127 = t124 + t125 + t126;
  t128 = t6*t9*t127;
  t129 = t123 + t128;
  t132 = -1.*t100*t44;
  t133 = -1.*t104*t22;
  t134 = t131 + t132 + t133;
  t135 = t29*t134;
  t137 = t104*t29;
  t138 = t100*t58;
  t139 = t136 + t137 + t138;
  t140 = t22*t139;
  t142 = t135 + t140;
  t145 = t9*t94;
  t146 = t121 + t145;
  t147 = -1.*t9*t146*t20;
  t148 = -1.*t14*t98;
  t149 = -1.*t16*t94*t20;
  t150 = t148 + t124 + t149;
  t151 = t16*t150;
  t152 = t147 + t151;
  t155 = t16*t94*t20;
  t156 = t154 + t136 + t155;
  t157 = t9*t14*t156;
  t158 = t14*t16*t94;
  t160 = t131 + t158 + t159;
  t161 = -1.*t9*t20*t160;
  t162 = t157 + t161;
  t164 = -1.*t9*t94;
  t165 = t109 + t164;
  t166 = t9*t14*t165;
  t167 = -1.*t14*t16*t94;
  t168 = t98*t20;
  t169 = t112 + t167 + t168;
  t171 = t16*t169;
  t172 = t166 + t171;
  t177 = -1.*t14*t92;
  t178 = t177 + t159;
  t179 = t14*t178;
  t180 = -1.*t92*t20;
  t181 = t154 + t180;
  t182 = t20*t181;
  t183 = t179 + t182;
  t71 = 2.416*t6*t9*t70;
  t78 = 2.416*t22*t76;
  t82 = 2.416*t29*t81;
  t83 = t71 + t78 + t82;
  t196 = 2.416*t37*t70;
  t197 = 2.416*t76*t50;
  t198 = 2.416*t81*t60;
  t199 = t196 + t197 + t198;
  t118 = 2.416*t29*t117;
  t130 = 2.416*t22*t129;
  t143 = 2.416*t6*t9*t142;
  t144 = t118 + t130 + t143;
  t200 = 2.416*t60*t117;
  t201 = 2.416*t50*t129;
  t202 = 2.416*t37*t142;
  t203 = t200 + t201 + t202;
  t222 = 2.416*t81*t117;
  t223 = 2.416*t76*t129;
  t224 = 2.416*t70*t142;
  t225 = t222 + t223 + t224;
  t237 = 0.004552*t6*t9;
  t238 = 0.000286*t22;
  t239 = -3.e-6*t29;
  t153 = 2.416*t22*t152;
  t163 = 2.416*t6*t9*t162;
  t173 = 2.416*t29*t172;
  t174 = t153 + t163 + t173;
  t204 = 2.416*t50*t152;
  t205 = 2.416*t37*t162;
  t206 = 2.416*t60*t172;
  t207 = t204 + t205 + t206;
  t226 = 2.416*t76*t152;
  t227 = 2.416*t70*t162;
  t228 = 2.416*t81*t172;
  t229 = t226 + t227 + t228;
  t240 = t237 + t238 + t239;
  t242 = 0.000286*t6*t9;
  t243 = 0.009792*t22;
  t244 = -2.e-6*t29;
  t245 = t242 + t243 + t244;
  t247 = -3.e-6*t6*t9;
  t248 = -2.e-6*t22;
  t249 = 0.006644*t29;
  t250 = t247 + t248 + t249;
  t274 = 2.416*t172*t117;
  t275 = 2.416*t152*t129;
  t276 = 2.416*t162*t142;
  t269 = -2.e-6*t9*t14;
  t270 = -3.e-6*t16;
  t271 = -0.006644*t9*t20;
  t272 = t269 + t270 + t271;
  t264 = 0.009792*t9*t14;
  t265 = 0.000286*t16;
  t266 = 2.e-6*t9*t20;
  t267 = t264 + t265 + t266;
  t259 = 0.000286*t9*t14;
  t260 = 0.004552*t16;
  t261 = 3.e-6*t9*t20;
  t262 = t259 + t260 + t261;
  t278 = -3.e-6*t14;
  t279 = 0.000286*t20;
  t280 = t278 + t279;
  t282 = -2.e-6*t14;
  t283 = 0.009792*t20;
  t284 = t282 + t283;
  t286 = 0.006644*t14;
  t287 = -2.e-6*t20;
  t288 = t286 + t287;
  t175 = 0.7910877919999999*t14*t22;
  t176 = -0.7910877919999999*t20*t29;
  t184 = 2.416*t6*t9*t183;
  t185 = t175 + t176 + t184;
  t208 = 0.7910877919999999*t14*t50;
  t209 = -0.7910877919999999*t20*t60;
  t210 = 2.416*t37*t183;
  t211 = t208 + t209 + t210;
  t230 = 0.7910877919999999*t14*t76;
  t231 = -0.7910877919999999*t20*t81;
  t232 = 2.416*t70*t183;
  t233 = t230 + t231 + t232;
  t290 = -0.7910877919999999*t20*t117;
  t291 = 0.7910877919999999*t14*t129;
  t292 = 2.416*t183*t142;
  t314 = 0.7910877919999999*t14*t152;
  t315 = -0.7910877919999999*t20*t172;
  t316 = 2.416*t162*t183;
  t186 = -0.00023435199999999998*t22;
  t187 = -0.023466607999999996*t29;
  t188 = t186 + t187;
  t212 = -0.00023435199999999998*t50;
  t213 = -0.023466607999999996*t60;
  t214 = t212 + t213;
  t234 = -0.00023435199999999998*t76;
  t235 = -0.023466607999999996*t81;
  t236 = t234 + t235;
  t294 = -0.023466607999999996*t117;
  t295 = -0.00023435199999999998*t129;
  t296 = t237 + t238 + t239 + t294 + t295;
  t318 = -0.00023435199999999998*t152;
  t319 = -0.023466607999999996*t172;
  t320 = t259 + t260 + t261 + t318 + t319;
  t336 = -0.00007973551582399999*t14;
  t337 = 0.007969835723695999*t20;
  t338 = t336 + t337;
  p_output1[0]=2.416*Power(t22,2) + 2.416*Power(t29,2) + 2.416*Power(t6,2)*Power(t9,2);
  p_output1[1]=t63;
  p_output1[2]=t83;
  p_output1[3]=t144;
  p_output1[4]=t174;
  p_output1[5]=t185;
  p_output1[6]=t188;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=t63;
  p_output1[19]=2.416*Power(t37,2) + 2.416*Power(t50,2) + 2.416*Power(t60,2);
  p_output1[20]=t199;
  p_output1[21]=t203;
  p_output1[22]=t207;
  p_output1[23]=t211;
  p_output1[24]=t214;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=t83;
  p_output1[37]=t199;
  p_output1[38]=2.416*Power(t70,2) + 2.416*Power(t76,2) + 2.416*Power(t81,2);
  p_output1[39]=t225;
  p_output1[40]=t229;
  p_output1[41]=t233;
  p_output1[42]=t236;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=t144;
  p_output1[55]=t203;
  p_output1[56]=t225;
  p_output1[57]=2.416*Power(t117,2) + 2.416*Power(t129,2) + 2.416*Power(t142,2) + t22*t245 + t250*t29 + t240*t6*t9;
  p_output1[58]=t22*t267 + t274 + t275 + t276 + t272*t29 + t262*t6*t9;
  p_output1[59]=t22*t284 + t288*t29 + t290 + t291 + t292 + t280*t6*t9;
  p_output1[60]=t296;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=t174;
  p_output1[73]=t207;
  p_output1[74]=t229;
  p_output1[75]=t16*t240 + t274 + t275 + t276 + t14*t245*t9 - 1.*t20*t250*t9;
  p_output1[76]=2.416*Power(t152,2) + 2.416*Power(t162,2) + 2.416*Power(t172,2) + t16*t262 + t14*t267*t9 - 1.*t20*t272*t9;
  p_output1[77]=t16*t280 + t314 + t315 + t316 + t14*t284*t9 - 1.*t20*t288*t9;
  p_output1[78]=t320;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=t185;
  p_output1[91]=t211;
  p_output1[92]=t233;
  p_output1[93]=t20*t245 + t14*t250 + t290 + t291 + t292;
  p_output1[94]=t20*t267 + t14*t272 + t314 + t315 + t316;
  p_output1[95]=0.25903141334910396*Power(t14,2) + 2.416*Power(t183,2) + 0.25903141334910396*Power(t20,2) + t20*t284 + t14*t288;
  p_output1[96]=t338;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=t188;
  p_output1[109]=t214;
  p_output1[110]=t236;
  p_output1[111]=t296;
  p_output1[112]=t320;
  p_output1[113]=t338;
  p_output1[114]=0.004779953895647999;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0;
  p_output1[172]=0;
  p_output1[173]=0;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=0;
  p_output1[181]=0;
  p_output1[182]=0;
  p_output1[183]=0;
  p_output1[184]=0;
  p_output1[185]=0;
  p_output1[186]=0;
  p_output1[187]=0;
  p_output1[188]=0;
  p_output1[189]=0;
  p_output1[190]=0;
  p_output1[191]=0;
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=0;
  p_output1[208]=0;
  p_output1[209]=0;
  p_output1[210]=0;
  p_output1[211]=0;
  p_output1[212]=0;
  p_output1[213]=0;
  p_output1[214]=0;
  p_output1[215]=0;
  p_output1[216]=0;
  p_output1[217]=0;
  p_output1[218]=0;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=0;
  p_output1[222]=0;
  p_output1[223]=0;
  p_output1[224]=0;
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=0;
  p_output1[229]=0;
  p_output1[230]=0;
  p_output1[231]=0;
  p_output1[232]=0;
  p_output1[233]=0;
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=0;
  p_output1[241]=0;
  p_output1[242]=0;
  p_output1[243]=0;
  p_output1[244]=0;
  p_output1[245]=0;
  p_output1[246]=0;
  p_output1[247]=0;
  p_output1[248]=0;
  p_output1[249]=0;
  p_output1[250]=0;
  p_output1[251]=0;
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=0;
  p_output1[259]=0;
  p_output1[260]=0;
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=0;
  p_output1[265]=0;
  p_output1[266]=0;
  p_output1[267]=0;
  p_output1[268]=0;
  p_output1[269]=0;
  p_output1[270]=0;
  p_output1[271]=0;
  p_output1[272]=0;
  p_output1[273]=0;
  p_output1[274]=0;
  p_output1[275]=0;
  p_output1[276]=0;
  p_output1[277]=0;
  p_output1[278]=0;
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0;
  p_output1[283]=0;
  p_output1[284]=0;
  p_output1[285]=0;
  p_output1[286]=0;
  p_output1[287]=0;
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=0;
  p_output1[294]=0;
  p_output1[295]=0;
  p_output1[296]=0;
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=0;
  p_output1[301]=0;
  p_output1[302]=0;
  p_output1[303]=0;
  p_output1[304]=0;
  p_output1[305]=0;
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=0;
  p_output1[313]=0;
  p_output1[314]=0;
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=0;
  p_output1[318]=0;
  p_output1[319]=0;
  p_output1[320]=0;
  p_output1[321]=0;
  p_output1[322]=0;
  p_output1[323]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Mmat2_b1_description.hh"

namespace SymFunction
{

void Mmat2_b1_description_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
