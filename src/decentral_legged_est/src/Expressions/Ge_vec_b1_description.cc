/*
 * Automatically Generated from Mathematica.
 * Sun 22 Sep 2024 09:12:27 GMT-05:00
 */

#include "math2mat.hpp"
#include "mdefs.hpp"

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t96;
  double t501;
  double t284;
  double t423;
  double t605;
  double t82;
  double t481;
  double t621;
  double t647;
  double t711;
  double t735;
  double t803;
  double t958;
  double t1052;
  double t1350;
  double t1381;
  double t1357;
  double t1675;
  double t1716;
  double t1016;
  double t1073;
  double t1105;
  double t1161;
  double t1170;
  double t1174;
  double t1223;
  double t1232;
  double t1249;
  double t1265;
  double t1895;
  double t1855;
  double t1352;
  double t1382;
  double t1412;
  double t1455;
  double t1464;
  double t1503;
  double t1514;
  double t1571;
  double t1576;
  double t1601;
  double t2067;
  double t2032;
  double t1677;
  double t1723;
  double t1746;
  double t1759;
  double t1768;
  double t1772;
  double t1779;
  double t1794;
  double t1796;
  double t1798;
  double t2352;
  double t2287;
  double t1867;
  double t1883;
  double t1885;
  double t1918;
  double t1922;
  double t1924;
  double t1928;
  double t2546;
  double t2549;
  double t2557;
  double t2580;
  double t1940;
  double t1996;
  double t2007;
  double t2038;
  double t2042;
  double t2060;
  double t2077;
  double t2080;
  double t2140;
  double t2177;
  double t2793;
  double t2794;
  double t2828;
  double t2840;
  double t2200;
  double t2209;
  double t2217;
  double t2300;
  double t2306;
  double t2310;
  double t2398;
  double t2410;
  double t2422;
  double t2424;
  double t3209;
  double t3212;
  double t3216;
  double t3231;
  double t2434;
  double t2457;
  double t2468;
  double t1045;
  double t3369;
  double t3403;
  double t3382;
  double t3396;
  double t3400;
  double t3413;
  double t3414;
  double t3420;
  double t3425;
  double t3440;
  double t3444;
  double t3451;
  double t3464;
  double t3483;
  double t3466;
  double t3467;
  double t3481;
  double t3495;
  double t3497;
  double t3502;
  double t3511;
  double t3514;
  double t3515;
  double t3518;
  double t3570;
  double t3625;
  double t3633;
  double t3672;
  double t4029;
  double t3934;
  double t3957;
  double t3958;
  double t3959;
  double t3970;
  double t3980;
  double t3990;
  double t3999;
  double t4043;
  double t4046;
  double t4050;
  double t4051;
  double t4094;
  double t4099;
  double t4107;
  double t4112;
  double t4137;
  double t4139;
  double t4149;
  double t4150;
  double t4151;
  double t4160;
  double t4164;
  double t4176;
  double t4189;
  double t4213;
  double t2578;
  double t2581;
  double t2600;
  double t4217;
  double t4226;
  double t4230;
  double t2606;
  double t2617;
  double t2629;
  double t4248;
  double t4252;
  double t4259;
  double t4273;
  double t4289;
  double t2831;
  double t2907;
  double t2930;
  double t4291;
  double t4304;
  double t4305;
  double t2953;
  double t2954;
  double t2975;
  double t4328;
  double t4335;
  double t4342;
  double t4378;
  double t4382;
  double t3217;
  double t3233;
  double t3255;
  double t4383;
  double t4390;
  double t4394;
  double t3262;
  double t3263;
  double t3265;
  double t4417;
  double t4428;
  double t4431;
  double t3932;
  double t4984;
  double t4997;
  double t4999;
  double t5001;
  double t5002;
  double t5009;
  double t5028;
  double t5031;
  double t5054;
  double t5060;
  double t5061;
  double t5067;
  double t5068;
  double t3660;
  double t3686;
  double t3726;
  double t5076;
  double t5079;
  double t5096;
  double t3759;
  double t3763;
  double t3789;
  double t5217;
  double t5226;
  double t5235;
  double t5278;
  double t5281;
  double t5302;
  double t5317;
  double t5442;
  double t5247;
  double t5343;
  double t5481;
  double t5482;
  double t5483;
  double t5486;
  double t5489;
  double t5494;
  double t5496;
  double t5497;
  double t5515;
  double t5522;
  double t5529;
  double t5536;
  double t5537;
  double t5539;
  double t5540;
  double t5546;
  double t5555;
  double t5569;
  double t5572;
  double t5578;
  double t5592;
  double t5606;
  double t5622;
  double t5624;
  double t5458;
  double t6049;
  double t6162;
  double t6168;
  double t6180;
  double t6223;
  double t6253;
  double t6267;
  double t6297;
  double t6303;
  double t6489;
  double t6493;
  double t6496;
  double t6504;
  double t6510;
  double t6546;
  double t6550;
  double t6574;
  double t6728;
  double t6734;
  double t6748;
  double t6725;
  double t6753;
  double t6791;
  double t6793;
  double t6805;
  double t6769;
  double t6775;
  double t6778;
  double t6875;
  double t6945;
  double t6951;
  double t6955;
  double t6907;
  double t7017;
  double t7024;
  double t7031;
  double t7041;
  double t7047;
  double t7052;
  double t7055;
  double t7061;
  double t7295;
  double t7312;
  double t7316;
  double t7319;
  double t7321;
  double t7325;
  double t7330;
  double t7332;
  double t7428;
  double t7430;
  double t7431;
  double t7370;
  double t7405;
  double t7587;
  double t7598;
  double t7599;
  double t7545;
  double t7571;
  double t7622;
  double t7626;
  double t7631;
  double t7798;
  double t7802;
  double t7807;
  double t7820;
  double t7821;
  double t7858;
  double t7861;
  double t7863;
  double t7990;
  double t7998;
  double t8004;
  double t7911;
  double t7928;
  double t8089;
  double t8090;
  double t8098;
  double t8101;
  double t8104;
  double t8114;
  double t8133;
  double t8170;
  double t8377;
  double t8383;
  double t8384;
  double t8385;
  double t8389;
  double t8406;
  double t8407;
  double t8410;
  double t8477;
  double t8488;
  double t8491;
  double t8429;
  double t8445;
  t96 = Sin(var1[3]);
  t501 = Cos(var1[3]);
  t284 = Cos(var1[5]);
  t423 = Sin(var1[4]);
  t605 = Sin(var1[5]);
  t82 = Cos(var1[4]);
  t481 = t284*t96*t423;
  t621 = t501*t605;
  t647 = t481 + t621;
  t711 = t501*t284;
  t735 = -1.*t96*t423*t605;
  t803 = t711 + t735;
  t958 = Sin(var1[9]);
  t1052 = Cos(var1[9]);
  t1350 = Sin(var1[12]);
  t1381 = Cos(var1[12]);
  t1357 = -0.327437*t647;
  t1675 = Sin(var1[15]);
  t1716 = Cos(var1[15]);
  t1016 = 0.072*t82*t958*t96;
  t1073 = -1.*t1052;
  t1105 = 1. + t1073;
  t1161 = 0.072*t1105*t803;
  t1170 = -1.*t82*t958*t96;
  t1174 = t1052*t803;
  t1223 = t1170 + t1174;
  t1232 = -1.*t1052*t82*t96;
  t1249 = -1.*t958*t803;
  t1265 = t1232 + t1249;
  t1895 = Sin(var1[10]);
  t1855 = Cos(var1[10]);
  t1352 = -0.072*t82*t1350*t96;
  t1382 = -1.*t1381;
  t1412 = 1. + t1382;
  t1455 = -0.072*t1412*t803;
  t1464 = -1.*t82*t1350*t96;
  t1503 = t1381*t803;
  t1514 = t1464 + t1503;
  t1571 = -1.*t1381*t82*t96;
  t1576 = -1.*t1350*t803;
  t1601 = t1571 + t1576;
  t2067 = Sin(var1[13]);
  t2032 = Cos(var1[13]);
  t1677 = 0.072*t82*t1675*t96;
  t1723 = -1.*t1716;
  t1746 = 1. + t1723;
  t1759 = 0.072*t1746*t803;
  t1768 = -1.*t82*t1675*t96;
  t1772 = t1716*t803;
  t1779 = t1768 + t1772;
  t1794 = -1.*t1716*t82*t96;
  t1796 = -1.*t1675*t803;
  t1798 = t1794 + t1796;
  t2352 = Sin(var1[16]);
  t2287 = Cos(var1[16]);
  t1867 = -1.*t1855;
  t1883 = 1. + t1867;
  t1885 = 0.3455*t1883*t647;
  t1918 = 0.3455*t1895*t1265;
  t1922 = t1895*t647;
  t1924 = t1855*t1265;
  t1928 = t1922 + t1924;
  t2546 = Cos(var1[11]);
  t2549 = -1.*t2546;
  t2557 = 1. + t2549;
  t2580 = Sin(var1[11]);
  t1940 = t1855*t647;
  t1996 = -1.*t1895*t1265;
  t2007 = t1940 + t1996;
  t2038 = -1.*t2032;
  t2042 = 1. + t2038;
  t2060 = -0.3455*t2042*t647;
  t2077 = -0.3455*t2067*t1601;
  t2080 = t2067*t647;
  t2140 = t2032*t1601;
  t2177 = t2080 + t2140;
  t2793 = Cos(var1[14]);
  t2794 = -1.*t2793;
  t2828 = 1. + t2794;
  t2840 = Sin(var1[14]);
  t2200 = t2032*t647;
  t2209 = -1.*t2067*t1601;
  t2217 = t2200 + t2209;
  t2300 = -1.*t2287;
  t2306 = 1. + t2300;
  t2310 = -0.3455*t2306*t647;
  t2398 = -0.3455*t2352*t1798;
  t2410 = t2352*t647;
  t2422 = t2287*t1798;
  t2424 = t2410 + t2422;
  t3209 = Cos(var1[17]);
  t3212 = -1.*t3209;
  t3216 = 1. + t3212;
  t3231 = Sin(var1[17]);
  t2434 = t2287*t647;
  t2457 = -1.*t2352*t1798;
  t2468 = t2434 + t2457;
  t1045 = 0.327437*t647;
  t3369 = Cos(var1[6]);
  t3403 = Sin(var1[6]);
  t3382 = -1.*t3369;
  t3396 = 1. + t3382;
  t3400 = -0.072*t3396*t803;
  t3413 = -0.072*t82*t96*t3403;
  t3414 = t3369*t803;
  t3420 = -1.*t82*t96*t3403;
  t3425 = t3414 + t3420;
  t3440 = -1.*t82*t3369*t96;
  t3444 = -1.*t803*t3403;
  t3451 = t3440 + t3444;
  t3464 = Cos(var1[7]);
  t3483 = Sin(var1[7]);
  t3466 = -1.*t3464;
  t3467 = 1. + t3466;
  t3481 = 0.3455*t3467*t647;
  t3495 = 0.3455*t3451*t3483;
  t3497 = t3464*t3451;
  t3502 = t647*t3483;
  t3511 = t3497 + t3502;
  t3514 = t3464*t647;
  t3515 = -1.*t3451*t3483;
  t3518 = t3514 + t3515;
  t3570 = Cos(var1[8]);
  t3625 = -1.*t3570;
  t3633 = 1. + t3625;
  t3672 = Sin(var1[8]);
  t4029 = 0.327437*t501*t82*t284;
  t3934 = 0.072*t501*t958*t423;
  t3957 = 0.072*t1105*t501*t82*t605;
  t3958 = -1.*t501*t958*t423;
  t3959 = t1052*t501*t82*t605;
  t3970 = t3958 + t3959;
  t3980 = -1.*t1052*t501*t423;
  t3990 = -1.*t501*t82*t958*t605;
  t3999 = t3980 + t3990;
  t4043 = -0.072*t501*t1350*t423;
  t4046 = -0.072*t1412*t501*t82*t605;
  t4050 = -1.*t501*t1350*t423;
  t4051 = t1381*t501*t82*t605;
  t4094 = t4050 + t4051;
  t4099 = -1.*t1381*t501*t423;
  t4107 = -1.*t501*t82*t1350*t605;
  t4112 = t4099 + t4107;
  t4137 = 0.072*t501*t1675*t423;
  t4139 = 0.072*t1746*t501*t82*t605;
  t4149 = -1.*t501*t1675*t423;
  t4150 = t1716*t501*t82*t605;
  t4151 = t4149 + t4150;
  t4160 = -1.*t1716*t501*t423;
  t4164 = -1.*t501*t82*t1675*t605;
  t4176 = t4160 + t4164;
  t4189 = -0.3455*t1883*t501*t82*t284;
  t4213 = 0.3455*t1895*t3999;
  t2578 = -0.35*t2557;
  t2581 = 0.3455*t2580;
  t2600 = t2578 + t2581;
  t4217 = -1.*t501*t82*t284*t1895;
  t4226 = t1855*t3999;
  t4230 = t4217 + t4226;
  t2606 = 0.3455*t2557;
  t2617 = 0.35*t2580;
  t2629 = t2606 + t2617;
  t4248 = -1.*t1855*t501*t82*t284;
  t4252 = -1.*t1895*t3999;
  t4259 = t4248 + t4252;
  t4273 = 0.3455*t2042*t501*t82*t284;
  t4289 = -0.3455*t2067*t4112;
  t2831 = -0.35*t2828;
  t2907 = -0.3455*t2840;
  t2930 = t2831 + t2907;
  t4291 = -1.*t501*t82*t284*t2067;
  t4304 = t2032*t4112;
  t4305 = t4291 + t4304;
  t2953 = -0.3455*t2828;
  t2954 = 0.35*t2840;
  t2975 = t2953 + t2954;
  t4328 = -1.*t2032*t501*t82*t284;
  t4335 = -1.*t2067*t4112;
  t4342 = t4328 + t4335;
  t4378 = 0.3455*t2306*t501*t82*t284;
  t4382 = -0.3455*t2352*t4176;
  t3217 = -0.35*t3216;
  t3233 = -0.3455*t3231;
  t3255 = t3217 + t3233;
  t4383 = -1.*t501*t82*t284*t2352;
  t4390 = t2287*t4176;
  t4394 = t4383 + t4390;
  t3262 = -0.3455*t3216;
  t3263 = 0.35*t3231;
  t3265 = t3262 + t3263;
  t4417 = -1.*t2287*t501*t82*t284;
  t4428 = -1.*t2352*t4176;
  t4431 = t4417 + t4428;
  t3932 = -0.327437*t501*t82*t284;
  t4984 = -0.072*t501*t82*t3396*t605;
  t4997 = -0.072*t501*t423*t3403;
  t4999 = t501*t82*t3369*t605;
  t5001 = -1.*t501*t423*t3403;
  t5002 = t4999 + t5001;
  t5009 = -1.*t501*t3369*t423;
  t5028 = -1.*t501*t82*t605*t3403;
  t5031 = t5009 + t5028;
  t5054 = -0.3455*t501*t82*t284*t3467;
  t5060 = 0.3455*t5031*t3483;
  t5061 = t3464*t5031;
  t5067 = -1.*t501*t82*t284*t3483;
  t5068 = t5061 + t5067;
  t3660 = -0.35*t3633;
  t3686 = 0.3455*t3672;
  t3726 = t3660 + t3686;
  t5076 = -1.*t501*t82*t284*t3464;
  t5079 = -1.*t5031*t3483;
  t5096 = t5076 + t5079;
  t3759 = 0.3455*t3633;
  t3763 = 0.35*t3672;
  t3789 = t3759 + t3763;
  t5217 = t501*t284*t423;
  t5226 = -1.*t96*t605;
  t5235 = t5217 + t5226;
  t5278 = t284*t96;
  t5281 = t501*t423*t605;
  t5302 = t5278 + t5281;
  t5317 = -0.327437*t5302;
  t5442 = 0.072*t1105*t5235;
  t5247 = -0.072*t1412*t5235;
  t5343 = 0.072*t1746*t5235;
  t5481 = -0.3455*t958*t1895*t5235;
  t5482 = 0.3455*t1883*t5302;
  t5483 = t958*t1895*t5235;
  t5486 = t1855*t5302;
  t5489 = t5483 + t5486;
  t5494 = -1.*t1855*t958*t5235;
  t5496 = t1895*t5302;
  t5497 = t5494 + t5496;
  t5515 = 0.3455*t1350*t2067*t5235;
  t5522 = -0.3455*t2042*t5302;
  t5529 = t1350*t2067*t5235;
  t5536 = t2032*t5302;
  t5537 = t5529 + t5536;
  t5539 = -1.*t2032*t1350*t5235;
  t5540 = t2067*t5302;
  t5546 = t5539 + t5540;
  t5555 = 0.3455*t1675*t2352*t5235;
  t5569 = -0.3455*t2306*t5302;
  t5572 = t1675*t2352*t5235;
  t5578 = t2287*t5302;
  t5592 = t5572 + t5578;
  t5606 = -1.*t2287*t1675*t5235;
  t5622 = t2352*t5302;
  t5624 = t5606 + t5622;
  t5458 = 0.327437*t5302;
  t6049 = -0.072*t3396*t5235;
  t6162 = 0.3455*t3467*t5302;
  t6168 = -0.3455*t5235*t3403*t3483;
  t6180 = -1.*t3464*t5235*t3403;
  t6223 = t5302*t3483;
  t6253 = t6180 + t6223;
  t6267 = t3464*t5302;
  t6297 = t5235*t3403*t3483;
  t6303 = t6267 + t6297;
  t6489 = 0.072*t501*t82*t3369;
  t6493 = -0.072*t5302*t3403;
  t6496 = -1.*t3369*t5302;
  t6504 = -1.*t501*t82*t3403;
  t6510 = t6496 + t6504;
  t6546 = t501*t82*t3369;
  t6550 = -1.*t5302*t3403;
  t6574 = t6546 + t6550;
  t6728 = -1.*t501*t284*t423;
  t6734 = t96*t605;
  t6748 = t6728 + t6734;
  t6725 = 0.3455*t3464*t6574;
  t6753 = 0.3455*t6748*t3483;
  t6791 = t3464*t6748;
  t6793 = -1.*t6574*t3483;
  t6805 = t6791 + t6793;
  t6769 = -1.*t3464*t6574;
  t6775 = -1.*t6748*t3483;
  t6778 = t6769 + t6775;
  t6875 = t3570*t6805;
  t6945 = t3464*t6574;
  t6951 = t6748*t3483;
  t6955 = t6945 + t6951;
  t6907 = -1.*t6805*t3672;
  t7017 = -0.072*t1052*t501*t82;
  t7024 = 0.072*t958*t5302;
  t7031 = -1.*t501*t82*t958;
  t7041 = -1.*t1052*t5302;
  t7047 = t7031 + t7041;
  t7052 = t1052*t501*t82;
  t7055 = -1.*t958*t5302;
  t7061 = t7052 + t7055;
  t7295 = 0.3455*t1895*t6748;
  t7312 = 0.3455*t1855*t7061;
  t7316 = -1.*t1895*t6748;
  t7319 = -1.*t1855*t7061;
  t7321 = t7316 + t7319;
  t7325 = t1855*t6748;
  t7330 = -1.*t1895*t7061;
  t7332 = t7325 + t7330;
  t7428 = t1895*t6748;
  t7430 = t1855*t7061;
  t7431 = t7428 + t7430;
  t7370 = t2546*t7332;
  t7405 = -1.*t2580*t7332;
  t7587 = -1.*t501*t82*t1350;
  t7598 = -1.*t1381*t5302;
  t7599 = t7587 + t7598;
  t7545 = 0.072*t1381*t501*t82;
  t7571 = -0.072*t1350*t5302;
  t7622 = t1381*t501*t82;
  t7626 = -1.*t1350*t5302;
  t7631 = t7622 + t7626;
  t7798 = -0.3455*t2067*t6748;
  t7802 = -0.3455*t2032*t7631;
  t7807 = -1.*t2067*t6748;
  t7820 = -1.*t2032*t7631;
  t7821 = t7807 + t7820;
  t7858 = t2032*t6748;
  t7861 = -1.*t2067*t7631;
  t7863 = t7858 + t7861;
  t7990 = t2067*t6748;
  t7998 = t2032*t7631;
  t8004 = t7990 + t7998;
  t7911 = t2793*t7863;
  t7928 = -1.*t2840*t7863;
  t8089 = -0.072*t1716*t501*t82;
  t8090 = 0.072*t1675*t5302;
  t8098 = -1.*t501*t82*t1675;
  t8101 = -1.*t1716*t5302;
  t8104 = t8098 + t8101;
  t8114 = t1716*t501*t82;
  t8133 = -1.*t1675*t5302;
  t8170 = t8114 + t8133;
  t8377 = -0.3455*t2352*t6748;
  t8383 = -0.3455*t2287*t8170;
  t8384 = -1.*t2352*t6748;
  t8385 = -1.*t2287*t8170;
  t8389 = t8384 + t8385;
  t8406 = t2287*t6748;
  t8407 = -1.*t2352*t8170;
  t8410 = t8406 + t8407;
  t8477 = t2352*t6748;
  t8488 = t2287*t8170;
  t8491 = t8477 + t8488;
  t8429 = t3209*t8410;
  t8445 = -1.*t3231*t8410;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=-613.86075;
  p_output1[3]=-23.700960000000002*(t1016 + t1045 + t1161 + 0.081713*t1223 + 0.000097*t1265) - 23.700960000000002*(t1352 + t1357 + t1455 - 0.081713*t1514 + 0.000097*t1601) - 23.700960000000002*(t1357 + t1677 + t1759 + 0.081713*t1779 + 0.000097*t1798) - 44.79246*(t1016 + t1161 + 0.168695*t1223 + t1885 + t1918 - 0.051013*t1928 + 0.345279*t2007) - 44.79246*(t1352 + t1455 - 0.168695*t1514 + t2060 + t2077 - 0.051013*t2177 - 0.345721*t2217) - 44.79246*(t1677 + t1759 + 0.168695*t1779 + t2310 + t2398 - 0.051013*t2424 - 0.345721*t2468) - 10.791000000000002*(t1016 + t1161 + 0.19875*t1223 + t1885 + t1918 + 0.350499*(t2007*t2546 - 1.*t1928*t2580) - 0.559496*(t1928*t2546 + t2007*t2580) + t1928*t2600 + t2007*t2629) - 10.791000000000002*(t1352 + t1455 - 0.19875*t1514 + t2060 + t2077 - 0.340501*(t2217*t2793 - 1.*t2177*t2840) - 0.559496*(t2177*t2793 + t2217*t2840) + t2177*t2930 + t2217*t2975) - 10.791000000000002*(t1677 + t1759 + 0.19875*t1779 + t2310 + t2398 - 0.340501*(t2468*t3209 - 1.*t2424*t3231) - 0.559496*(t2424*t3209 + t2468*t3231) + t2424*t3255 + t2468*t3265) - 23.700960000000002*(t1045 + t3400 + t3413 - 0.081713*t3425 + 0.000097*t3451) - 44.79246*(t3400 + t3413 - 0.168695*t3425 + t3481 + t3495 - 0.051013*t3511 + 0.345279*t3518) - 10.791000000000002*(t3400 + t3413 - 0.19875*t3425 + t3481 + t3495 + 0.350499*(t3518*t3570 - 1.*t3511*t3672) - 0.559496*(t3511*t3570 + t3518*t3672) + t3511*t3726 + t3518*t3789) - 296.72307*(0.00875*t647 + 0.002184*t803 - 0.002934*t82*t96);
  p_output1[4]=-23.700960000000002*(t3932 + t3934 + t3957 + 0.081713*t3970 + 0.000097*t3999) - 23.700960000000002*(t4029 + t4043 + t4046 - 0.081713*t4094 + 0.000097*t4112) - 23.700960000000002*(t4029 + t4137 + t4139 + 0.081713*t4151 + 0.000097*t4176) - 44.79246*(t3934 + t3957 + 0.168695*t3970 + t4189 + t4213 - 0.051013*t4230 + 0.345279*t4259) - 10.791000000000002*(t3934 + t3957 + 0.19875*t3970 + t4189 + t4213 + t2600*t4230 + t2629*t4259 + 0.350499*(-1.*t2580*t4230 + t2546*t4259) - 0.559496*(t2546*t4230 + t2580*t4259)) - 44.79246*(t4043 + t4046 - 0.168695*t4094 + t4273 + t4289 - 0.051013*t4305 - 0.345721*t4342) - 10.791000000000002*(t4043 + t4046 - 0.19875*t4094 + t4273 + t4289 + t2930*t4305 + t2975*t4342 - 0.340501*(-1.*t2840*t4305 + t2793*t4342) - 0.559496*(t2793*t4305 + t2840*t4342)) - 44.79246*(t4137 + t4139 + 0.168695*t4151 + t4378 + t4382 - 0.051013*t4394 - 0.345721*t4431) - 10.791000000000002*(t4137 + t4139 + 0.19875*t4151 + t4378 + t4382 + t3255*t4394 + t3265*t4431 - 0.340501*(-1.*t3231*t4394 + t3209*t4431) - 0.559496*(t3209*t4394 + t3231*t4431)) - 23.700960000000002*(t3932 + t4984 + t4997 - 0.081713*t5002 + 0.000097*t5031) - 44.79246*(t4984 + t4997 - 0.168695*t5002 + t5054 + t5060 - 0.051013*t5068 + 0.345279*t5096) - 10.791000000000002*(t4984 + t4997 - 0.19875*t5002 + t5054 + t5060 + t3726*t5068 + t3789*t5096 + 0.350499*(-1.*t3672*t5068 + t3570*t5096) - 0.559496*(t3570*t5068 + t3672*t5096)) - 296.72307*(-0.002934*t423*t501 - 0.00875*t284*t501*t82 + 0.002184*t501*t605*t82);
  p_output1[5]=-296.72307*(0.002184*t5235 + 0.00875*t5302) - 23.700960000000002*(-0.000097*t1350*t5235 - 0.081713*t1381*t5235 + t5247 + t5317) - 23.700960000000002*(-0.000097*t1675*t5235 + 0.081713*t1716*t5235 + t5317 + t5343) - 44.79246*(0.168695*t1052*t5235 + t5442 + t5481 + t5482 + 0.345279*t5489 - 0.051013*t5497) - 10.791000000000002*(0.19875*t1052*t5235 + t5442 + t5481 + t5482 + t2629*t5489 + t2600*t5497 - 0.559496*(t2580*t5489 + t2546*t5497) + 0.350499*(t2546*t5489 - 1.*t2580*t5497)) - 44.79246*(-0.168695*t1381*t5235 + t5247 + t5515 + t5522 - 0.345721*t5537 - 0.051013*t5546) - 10.791000000000002*(-0.19875*t1381*t5235 + t5247 + t5515 + t5522 + t2975*t5537 + t2930*t5546 - 0.559496*(t2840*t5537 + t2793*t5546) - 0.340501*(t2793*t5537 - 1.*t2840*t5546)) - 44.79246*(0.168695*t1716*t5235 + t5343 + t5555 + t5569 - 0.345721*t5592 - 0.051013*t5624) - 10.791000000000002*(0.19875*t1716*t5235 + t5343 + t5555 + t5569 + t3265*t5592 + t3255*t5624 - 0.559496*(t3231*t5592 + t3209*t5624) - 0.340501*(t3209*t5592 - 1.*t3231*t5624)) - 23.700960000000002*(-0.081713*t3369*t5235 - 0.000097*t3403*t5235 + t5458 + t6049) - 44.79246*(-0.168695*t3369*t5235 + t6049 + t6162 + t6168 - 0.051013*t6253 + 0.345279*t6303) - 10.791000000000002*(-0.19875*t3369*t5235 + t6049 + t6162 + t6168 + t3726*t6253 + t3789*t6303 + 0.350499*(-1.*t3672*t6253 + t3570*t6303) - 0.559496*(t3570*t6253 + t3672*t6303)) - 23.700960000000002*(0.081713*t1052*t5235 + t5442 + t5458 - 0.000097*t5235*t958);
  p_output1[6]=-10.791000000000002*(t6489 + t6493 + 0.3455*t3483*t6510 + t3464*t3726*t6510 - 1.*t3483*t3789*t6510 + 0.350499*(-1.*t3483*t3570*t6510 - 1.*t3464*t3672*t6510) - 0.559496*(t3464*t3570*t6510 - 1.*t3483*t3672*t6510) - 0.19875*t6574) - 44.79246*(t6489 + t6493 - 0.051013*t3464*t6510 + 0.00022099999999997122*t3483*t6510 - 0.168695*t6574) - 23.700960000000002*(t6489 + t6493 + 0.000097*t6510 - 0.081713*t6574);
  p_output1[7]=-44.79246*(t6725 + t6753 + 0.345279*t6778 - 0.051013*t6805) - 10.791000000000002*(t6725 + t6753 + t3789*t6778 + t3726*t6805 - 0.559496*(t3672*t6778 + t6875) + 0.350499*(t3570*t6778 + t6907));
  p_output1[8]=-10.791000000000002*((0.35*t3570 + t3686)*t6805 + (0.3455*t3570 - 0.35*t3672)*t6955 + 0.350499*(t6907 - 1.*t3570*t6955) - 0.559496*(t6875 - 1.*t3672*t6955));
  p_output1[9]=-23.700960000000002*(t7017 + t7024 + 0.000097*t7047 + 0.081713*t7061) - 44.79246*(t7017 + t7024 - 0.051013*t1855*t7047 + 0.00022099999999997122*t1895*t7047 + 0.168695*t7061) - 10.791000000000002*(t7017 + t7024 + 0.3455*t1895*t7047 + t1855*t2600*t7047 - 1.*t1895*t2629*t7047 + 0.350499*(-1.*t1895*t2546*t7047 - 1.*t1855*t2580*t7047) - 0.559496*(t1855*t2546*t7047 - 1.*t1895*t2580*t7047) + 0.19875*t7061);
  p_output1[10]=-44.79246*(t7295 + t7312 + 0.345279*t7321 - 0.051013*t7332) - 10.791000000000002*(t7295 + t7312 + t2629*t7321 + t2600*t7332 - 0.559496*(t2580*t7321 + t7370) + 0.350499*(t2546*t7321 + t7405));
  p_output1[11]=-10.791000000000002*((0.35*t2546 + t2581)*t7332 + (0.3455*t2546 - 0.35*t2580)*t7431 + 0.350499*(t7405 - 1.*t2546*t7431) - 0.559496*(t7370 - 1.*t2580*t7431));
  p_output1[12]=-10.791000000000002*(t7545 + t7571 - 0.3455*t2067*t7599 + t2032*t2930*t7599 - 1.*t2067*t2975*t7599 - 0.340501*(-1.*t2067*t2793*t7599 - 1.*t2032*t2840*t7599) - 0.559496*(t2032*t2793*t7599 - 1.*t2067*t2840*t7599) - 0.19875*t7631) - 44.79246*(t7545 + t7571 - 0.051013*t2032*t7599 + 0.00022100000000002673*t2067*t7599 - 0.168695*t7631) - 23.700960000000002*(t7545 + t7571 + 0.000097*t7599 - 0.081713*t7631);
  p_output1[13]=-44.79246*(t7798 + t7802 - 0.345721*t7821 - 0.051013*t7863) - 10.791000000000002*(t7798 + t7802 + t2975*t7821 + t2930*t7863 - 0.559496*(t2840*t7821 + t7911) - 0.340501*(t2793*t7821 + t7928));
  p_output1[14]=-10.791000000000002*((0.35*t2793 + t2907)*t7863 + (-0.3455*t2793 - 0.35*t2840)*t8004 - 0.340501*(t7928 - 1.*t2793*t8004) - 0.559496*(t7911 - 1.*t2840*t8004));
  p_output1[15]=-23.700960000000002*(t8089 + t8090 + 0.000097*t8104 + 0.081713*t8170) - 44.79246*(t8089 + t8090 - 0.051013*t2287*t8104 + 0.00022100000000002673*t2352*t8104 + 0.168695*t8170) - 10.791000000000002*(t8089 + t8090 - 0.3455*t2352*t8104 + t2287*t3255*t8104 - 1.*t2352*t3265*t8104 - 0.340501*(-1.*t2352*t3209*t8104 - 1.*t2287*t3231*t8104) - 0.559496*(t2287*t3209*t8104 - 1.*t2352*t3231*t8104) + 0.19875*t8170);
  p_output1[16]=-44.79246*(t8377 + t8383 - 0.345721*t8389 - 0.051013*t8410) - 10.791000000000002*(t8377 + t8383 + t3265*t8389 + t3255*t8410 - 0.559496*(t3231*t8389 + t8429) - 0.340501*(t3209*t8389 + t8445));
  p_output1[17]=-10.791000000000002*((0.35*t3209 + t3233)*t8410 + (-0.3455*t3209 - 0.35*t3231)*t8491 - 0.340501*(t8445 - 1.*t3209*t8491) - 0.559496*(t8429 - 1.*t3231*t8491));
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ge_vec_b1_description.hh"

namespace SymFunction
{

void Ge_vec_b1_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
