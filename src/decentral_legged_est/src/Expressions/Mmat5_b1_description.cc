/*
 * Automatically Generated from Mathematica.
 * Sun 22 Sep 2024 09:05:51 GMT-05:00
 */

#include "math2mat.hpp"
#include "mdefs.hpp"

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t43;
  double t115;
  double t110;
  double t97;
  double t121;
  double t62;
  double t112;
  double t122;
  double t123;
  double t151;
  double t142;
  double t129;
  double t134;
  double t137;
  double t176;
  double t186;
  double t189;
  double t199;
  double t200;
  double t201;
  double t230;
  double t231;
  double t232;
  double t234;
  double t235;
  double t237;
  double t257;
  double t262;
  double t264;
  double t268;
  double t269;
  double t279;
  double t241;
  double t247;
  double t248;
  double t266;
  double t282;
  double t283;
  double t289;
  double t290;
  double t294;
  double t256;
  double t300;
  double t310;
  double t321;
  double t328;
  double t336;
  double t372;
  double t367;
  double t150;
  double t163;
  double t165;
  double t169;
  double t174;
  double t190;
  double t193;
  double t194;
  double t198;
  double t202;
  double t206;
  double t207;
  double t208;
  double t209;
  double t213;
  double t214;
  double t216;
  double t217;
  double t218;
  double t220;
  double t221;
  double t225;
  double t287;
  double t296;
  double t297;
  double t299;
  double t301;
  double t302;
  double t303;
  double t304;
  double t308;
  double t311;
  double t318;
  double t319;
  double t320;
  double t322;
  double t323;
  double t324;
  double t325;
  double t326;
  double t330;
  double t331;
  double t334;
  double t335;
  double t337;
  double t338;
  double t339;
  double t340;
  double t341;
  double t346;
  double t347;
  double t349;
  double t350;
  double t351;
  double t352;
  double t353;
  double t354;
  double t356;
  double t357;
  double t358;
  double t360;
  double t361;
  double t362;
  double t364;
  double t365;
  double t368;
  double t370;
  double t371;
  double t375;
  double t376;
  double t377;
  double t378;
  double t383;
  double t385;
  double t386;
  double t387;
  double t388;
  double t389;
  double t390;
  double t215;
  double t219;
  double t226;
  double t227;
  double t409;
  double t410;
  double t411;
  double t412;
  double t309;
  double t327;
  double t344;
  double t345;
  double t413;
  double t415;
  double t416;
  double t417;
  double t443;
  double t444;
  double t445;
  double t446;
  double t458;
  double t459;
  double t460;
  double t355;
  double t366;
  double t381;
  double t382;
  double t418;
  double t419;
  double t421;
  double t425;
  double t447;
  double t448;
  double t449;
  double t450;
  double t461;
  double t466;
  double t467;
  double t468;
  double t469;
  double t471;
  double t472;
  double t473;
  double t474;
  double t501;
  double t502;
  double t503;
  double t488;
  double t489;
  double t490;
  double t491;
  double t493;
  double t494;
  double t495;
  double t496;
  double t483;
  double t484;
  double t485;
  double t486;
  double t509;
  double t510;
  double t511;
  double t513;
  double t514;
  double t515;
  double t505;
  double t506;
  double t507;
  double t392;
  double t393;
  double t394;
  double t395;
  double t426;
  double t427;
  double t429;
  double t430;
  double t451;
  double t452;
  double t453;
  double t454;
  double t517;
  double t518;
  double t519;
  double t541;
  double t542;
  double t543;
  double t397;
  double t399;
  double t400;
  double t431;
  double t433;
  double t434;
  double t455;
  double t456;
  double t457;
  double t521;
  double t522;
  double t523;
  double t545;
  double t546;
  double t547;
  double t563;
  double t564;
  double t565;
  t43 = Cos(var1[4]);
  t115 = Cos(var1[9]);
  t110 = Sin(var1[4]);
  t97 = Sin(var1[9]);
  t121 = Sin(var1[5]);
  t62 = Cos(var1[5]);
  t112 = t97*t110;
  t122 = -1.*t115*t43*t121;
  t123 = t112 + t122;
  t151 = Cos(var1[3]);
  t142 = Sin(var1[3]);
  t129 = t115*t110;
  t134 = t43*t97*t121;
  t137 = t129 + t134;
  t176 = t43*t97;
  t186 = t115*t110*t121;
  t189 = t176 + t186;
  t199 = t115*t43;
  t200 = -1.*t97*t110*t121;
  t201 = t199 + t200;
  t230 = -1.*t115;
  t231 = 1. + t230;
  t232 = 0.072*t231;
  t234 = 0.081713*t115;
  t235 = -0.000097*t97;
  t237 = t232 + t234 + t235;
  t257 = 0.000097*t115;
  t262 = 0.009713*t97;
  t264 = t257 + t262;
  t268 = 0.327437*t62;
  t269 = -1.*t237*t121;
  t279 = t268 + t269;
  t241 = t62*t237;
  t247 = 0.327437*t121;
  t248 = t241 + t247;
  t266 = t264*t110;
  t282 = t43*t279;
  t283 = t266 + t282;
  t289 = t43*t264;
  t290 = -1.*t110*t279;
  t294 = t289 + t290;
  t256 = -1.*t248*t121;
  t300 = t115*t62*t248;
  t310 = t248*t121;
  t321 = t62*t97*t248;
  t328 = -1.*t115*t62*t248;
  t336 = -1.*t62*t97*t248;
  t372 = t115*t264;
  t367 = -1.*t264*t97;
  t150 = t62*t142*t110;
  t163 = t151*t121;
  t165 = t150 + t163;
  t169 = 2.416*t43*t62*t165;
  t174 = t115*t151*t62;
  t190 = -1.*t142*t189;
  t193 = t174 + t190;
  t194 = 2.416*t123*t193;
  t198 = -1.*t151*t62*t97;
  t202 = -1.*t142*t201;
  t206 = t198 + t202;
  t207 = 2.416*t137*t206;
  t208 = t169 + t194 + t207;
  t209 = -1.*t151*t62*t110;
  t213 = t142*t121;
  t214 = t209 + t213;
  t216 = t115*t62*t142;
  t217 = t151*t189;
  t218 = t216 + t217;
  t220 = -1.*t62*t97*t142;
  t221 = t151*t201;
  t225 = t220 + t221;
  t287 = -1.*t43*t62*t283;
  t296 = t62*t110*t294;
  t297 = t256 + t287 + t296;
  t299 = t123*t297;
  t301 = t123*t283;
  t302 = t189*t294;
  t303 = t300 + t301 + t302;
  t304 = t43*t62*t303;
  t308 = t299 + t304;
  t311 = t43*t62*t283;
  t318 = -1.*t62*t110*t294;
  t319 = t310 + t311 + t318;
  t320 = t137*t319;
  t322 = -1.*t137*t283;
  t323 = -1.*t201*t294;
  t324 = t321 + t322 + t323;
  t325 = t43*t62*t324;
  t326 = t320 + t325;
  t330 = -1.*t123*t283;
  t331 = -1.*t189*t294;
  t334 = t328 + t330 + t331;
  t335 = t137*t334;
  t337 = t137*t283;
  t338 = t201*t294;
  t339 = t336 + t337 + t338;
  t340 = t123*t339;
  t341 = t335 + t340;
  t346 = -1.*t62*t279;
  t347 = t256 + t346;
  t349 = t115*t62*t347;
  t350 = t264*t97;
  t351 = -1.*t115*t121*t279;
  t352 = t350 + t300 + t351;
  t353 = t121*t352;
  t354 = t349 + t353;
  t356 = t62*t279;
  t357 = t310 + t356;
  t358 = -1.*t62*t97*t357;
  t360 = -1.*t115*t264;
  t361 = -1.*t97*t121*t279;
  t362 = t360 + t321 + t361;
  t364 = t121*t362;
  t365 = t358 + t364;
  t368 = t115*t121*t279;
  t370 = t367 + t328 + t368;
  t371 = -1.*t62*t97*t370;
  t375 = t97*t121*t279;
  t376 = t372 + t336 + t375;
  t377 = t115*t62*t376;
  t378 = t371 + t377;
  t383 = -1.*t237*t97;
  t385 = t372 + t383;
  t386 = t97*t385;
  t387 = -1.*t115*t237;
  t388 = t387 + t367;
  t389 = t115*t388;
  t390 = t386 + t389;
  t215 = 2.416*t43*t62*t214;
  t219 = 2.416*t123*t218;
  t226 = 2.416*t137*t225;
  t227 = t215 + t219 + t226;
  t409 = 2.416*t165*t214;
  t410 = 2.416*t218*t193;
  t411 = 2.416*t225*t206;
  t412 = t409 + t410 + t411;
  t309 = 2.416*t137*t308;
  t327 = 2.416*t123*t326;
  t344 = 2.416*t43*t62*t341;
  t345 = t309 + t327 + t344;
  t413 = 2.416*t206*t308;
  t415 = 2.416*t193*t326;
  t416 = 2.416*t165*t341;
  t417 = t413 + t415 + t416;
  t443 = 2.416*t225*t308;
  t444 = 2.416*t218*t326;
  t445 = 2.416*t214*t341;
  t446 = t443 + t444 + t445;
  t458 = 0.004552*t43*t62;
  t459 = -0.000286*t123;
  t460 = -3.e-6*t137;
  t355 = 2.416*t137*t354;
  t366 = 2.416*t123*t365;
  t381 = 2.416*t43*t62*t378;
  t382 = t355 + t366 + t381;
  t418 = 2.416*t206*t354;
  t419 = 2.416*t193*t365;
  t421 = 2.416*t165*t378;
  t425 = t418 + t419 + t421;
  t447 = 2.416*t225*t354;
  t448 = 2.416*t218*t365;
  t449 = 2.416*t214*t378;
  t450 = t447 + t448 + t449;
  t461 = t458 + t459 + t460;
  t466 = -0.000286*t43*t62;
  t467 = 0.009792*t123;
  t468 = 2.e-6*t137;
  t469 = t466 + t467 + t468;
  t471 = -3.e-6*t43*t62;
  t472 = 2.e-6*t123;
  t473 = 0.006644*t137;
  t474 = t471 + t472 + t473;
  t501 = 2.416*t354*t308;
  t502 = 2.416*t365*t326;
  t503 = 2.416*t378*t341;
  t488 = 0.009792*t115*t62;
  t489 = -2.e-6*t62*t97;
  t490 = -0.000286*t121;
  t491 = t488 + t489 + t490;
  t493 = 2.e-6*t115*t62;
  t494 = -0.006644*t62*t97;
  t495 = -3.e-6*t121;
  t496 = t493 + t494 + t495;
  t483 = -0.000286*t115*t62;
  t484 = 3.e-6*t62*t97;
  t485 = 0.004552*t121;
  t486 = t483 + t484 + t485;
  t509 = 2.e-6*t115;
  t510 = 0.009792*t97;
  t511 = t509 + t510;
  t513 = 0.006644*t115;
  t514 = 2.e-6*t97;
  t515 = t513 + t514;
  t505 = -3.e-6*t115;
  t506 = -0.000286*t97;
  t507 = t505 + t506;
  t392 = 2.416*t43*t62*t390;
  t393 = 0.7910877919999999*t115*t123;
  t394 = -0.7910877919999999*t97*t137;
  t395 = t392 + t393 + t394;
  t426 = 2.416*t390*t165;
  t427 = 0.7910877919999999*t115*t193;
  t429 = -0.7910877919999999*t97*t206;
  t430 = t426 + t427 + t429;
  t451 = 2.416*t390*t214;
  t452 = 0.7910877919999999*t115*t218;
  t453 = -0.7910877919999999*t97*t225;
  t454 = t451 + t452 + t453;
  t517 = -0.7910877919999999*t97*t308;
  t518 = 0.7910877919999999*t115*t326;
  t519 = 2.416*t390*t341;
  t541 = -0.7910877919999999*t97*t354;
  t542 = 0.7910877919999999*t115*t365;
  t543 = 2.416*t390*t378;
  t397 = -0.00023435199999999998*t123;
  t399 = 0.023466607999999996*t137;
  t400 = t397 + t399;
  t431 = -0.00023435199999999998*t193;
  t433 = 0.023466607999999996*t206;
  t434 = t431 + t433;
  t455 = -0.00023435199999999998*t218;
  t456 = 0.023466607999999996*t225;
  t457 = t455 + t456;
  t521 = 0.023466607999999996*t308;
  t522 = -0.00023435199999999998*t326;
  t523 = t458 + t459 + t460 + t521 + t522;
  t545 = 0.023466607999999996*t354;
  t546 = -0.00023435199999999998*t365;
  t547 = t483 + t484 + t485 + t545 + t546;
  t563 = -0.00007973551582399999*t115;
  t564 = -0.007969835723695999*t97;
  t565 = t563 + t564;
  p_output1[0]=2.416*Power(t123,2) + 2.416*Power(t137,2) + 2.416*Power(t43,2)*Power(t62,2);
  p_output1[1]=t208;
  p_output1[2]=t227;
  p_output1[3]=t345;
  p_output1[4]=t382;
  p_output1[5]=t395;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=t400;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=t208;
  p_output1[19]=2.416*Power(t165,2) + 2.416*Power(t193,2) + 2.416*Power(t206,2);
  p_output1[20]=t412;
  p_output1[21]=t417;
  p_output1[22]=t425;
  p_output1[23]=t430;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=t434;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=t227;
  p_output1[37]=t412;
  p_output1[38]=2.416*Power(t214,2) + 2.416*Power(t218,2) + 2.416*Power(t225,2);
  p_output1[39]=t446;
  p_output1[40]=t450;
  p_output1[41]=t454;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=t457;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=t345;
  p_output1[55]=t417;
  p_output1[56]=t446;
  p_output1[57]=2.416*Power(t308,2) + 2.416*Power(t326,2) + 2.416*Power(t341,2) + t123*t469 + t137*t474 + t43*t461*t62;
  p_output1[58]=t123*t491 + t137*t496 + t501 + t502 + t503 + t43*t486*t62;
  p_output1[59]=t123*t511 + t137*t515 + t517 + t518 + t519 + t43*t507*t62;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=t523;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=t382;
  p_output1[73]=t425;
  p_output1[74]=t450;
  p_output1[75]=t121*t461 + t501 + t502 + t503 + t115*t469*t62 - 1.*t474*t62*t97;
  p_output1[76]=2.416*Power(t354,2) + 2.416*Power(t365,2) + 2.416*Power(t378,2) + t121*t486 + t115*t491*t62 - 1.*t496*t62*t97;
  p_output1[77]=t121*t507 + t541 + t542 + t543 + t115*t511*t62 - 1.*t515*t62*t97;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=t547;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=t395;
  p_output1[91]=t430;
  p_output1[92]=t454;
  p_output1[93]=t115*t474 + t517 + t518 + t519 + t469*t97;
  p_output1[94]=t115*t496 + t541 + t542 + t543 + t491*t97;
  p_output1[95]=0.25903141334910396*Power(t115,2) + 2.416*Power(t390,2) + t115*t515 + t511*t97 + 0.25903141334910396*Power(t97,2);
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=t565;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=t400;
  p_output1[163]=t434;
  p_output1[164]=t457;
  p_output1[165]=t523;
  p_output1[166]=t547;
  p_output1[167]=t565;
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0.004779953895647999;
  p_output1[172]=0;
  p_output1[173]=0;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=0;
  p_output1[181]=0;
  p_output1[182]=0;
  p_output1[183]=0;
  p_output1[184]=0;
  p_output1[185]=0;
  p_output1[186]=0;
  p_output1[187]=0;
  p_output1[188]=0;
  p_output1[189]=0;
  p_output1[190]=0;
  p_output1[191]=0;
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=0;
  p_output1[208]=0;
  p_output1[209]=0;
  p_output1[210]=0;
  p_output1[211]=0;
  p_output1[212]=0;
  p_output1[213]=0;
  p_output1[214]=0;
  p_output1[215]=0;
  p_output1[216]=0;
  p_output1[217]=0;
  p_output1[218]=0;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=0;
  p_output1[222]=0;
  p_output1[223]=0;
  p_output1[224]=0;
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=0;
  p_output1[229]=0;
  p_output1[230]=0;
  p_output1[231]=0;
  p_output1[232]=0;
  p_output1[233]=0;
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=0;
  p_output1[241]=0;
  p_output1[242]=0;
  p_output1[243]=0;
  p_output1[244]=0;
  p_output1[245]=0;
  p_output1[246]=0;
  p_output1[247]=0;
  p_output1[248]=0;
  p_output1[249]=0;
  p_output1[250]=0;
  p_output1[251]=0;
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=0;
  p_output1[259]=0;
  p_output1[260]=0;
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=0;
  p_output1[265]=0;
  p_output1[266]=0;
  p_output1[267]=0;
  p_output1[268]=0;
  p_output1[269]=0;
  p_output1[270]=0;
  p_output1[271]=0;
  p_output1[272]=0;
  p_output1[273]=0;
  p_output1[274]=0;
  p_output1[275]=0;
  p_output1[276]=0;
  p_output1[277]=0;
  p_output1[278]=0;
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0;
  p_output1[283]=0;
  p_output1[284]=0;
  p_output1[285]=0;
  p_output1[286]=0;
  p_output1[287]=0;
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=0;
  p_output1[294]=0;
  p_output1[295]=0;
  p_output1[296]=0;
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=0;
  p_output1[301]=0;
  p_output1[302]=0;
  p_output1[303]=0;
  p_output1[304]=0;
  p_output1[305]=0;
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=0;
  p_output1[313]=0;
  p_output1[314]=0;
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=0;
  p_output1[318]=0;
  p_output1[319]=0;
  p_output1[320]=0;
  p_output1[321]=0;
  p_output1[322]=0;
  p_output1[323]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Mmat5_b1_description.hh"

namespace SymFunction
{

void Mmat5_b1_description_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
